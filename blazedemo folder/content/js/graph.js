/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 11818.0, "series": [{"data": [[0.0, 251.0], [0.1, 254.0], [0.2, 254.0], [0.3, 255.0], [0.4, 256.0], [0.5, 257.0], [0.6, 258.0], [0.7, 258.0], [0.8, 259.0], [0.9, 259.0], [1.0, 260.0], [1.1, 260.0], [1.2, 261.0], [1.3, 261.0], [1.4, 262.0], [1.5, 262.0], [1.6, 263.0], [1.7, 263.0], [1.8, 263.0], [1.9, 264.0], [2.0, 264.0], [2.1, 265.0], [2.2, 265.0], [2.3, 265.0], [2.4, 266.0], [2.5, 266.0], [2.6, 266.0], [2.7, 266.0], [2.8, 266.0], [2.9, 267.0], [3.0, 267.0], [3.1, 267.0], [3.2, 268.0], [3.3, 268.0], [3.4, 268.0], [3.5, 268.0], [3.6, 269.0], [3.7, 269.0], [3.8, 269.0], [3.9, 270.0], [4.0, 270.0], [4.1, 270.0], [4.2, 270.0], [4.3, 271.0], [4.4, 271.0], [4.5, 271.0], [4.6, 271.0], [4.7, 272.0], [4.8, 272.0], [4.9, 272.0], [5.0, 272.0], [5.1, 272.0], [5.2, 273.0], [5.3, 273.0], [5.4, 273.0], [5.5, 273.0], [5.6, 274.0], [5.7, 274.0], [5.8, 274.0], [5.9, 274.0], [6.0, 274.0], [6.1, 274.0], [6.2, 275.0], [6.3, 275.0], [6.4, 275.0], [6.5, 275.0], [6.6, 275.0], [6.7, 275.0], [6.8, 276.0], [6.9, 276.0], [7.0, 276.0], [7.1, 276.0], [7.2, 277.0], [7.3, 277.0], [7.4, 277.0], [7.5, 277.0], [7.6, 277.0], [7.7, 278.0], [7.8, 278.0], [7.9, 278.0], [8.0, 278.0], [8.1, 278.0], [8.2, 279.0], [8.3, 279.0], [8.4, 279.0], [8.5, 279.0], [8.6, 280.0], [8.7, 280.0], [8.8, 280.0], [8.9, 280.0], [9.0, 281.0], [9.1, 281.0], [9.2, 281.0], [9.3, 281.0], [9.4, 281.0], [9.5, 282.0], [9.6, 282.0], [9.7, 282.0], [9.8, 282.0], [9.9, 283.0], [10.0, 283.0], [10.1, 283.0], [10.2, 283.0], [10.3, 284.0], [10.4, 284.0], [10.5, 284.0], [10.6, 284.0], [10.7, 284.0], [10.8, 285.0], [10.9, 285.0], [11.0, 285.0], [11.1, 285.0], [11.2, 286.0], [11.3, 286.0], [11.4, 286.0], [11.5, 286.0], [11.6, 286.0], [11.7, 286.0], [11.8, 286.0], [11.9, 287.0], [12.0, 287.0], [12.1, 287.0], [12.2, 287.0], [12.3, 287.0], [12.4, 287.0], [12.5, 288.0], [12.6, 288.0], [12.7, 288.0], [12.8, 288.0], [12.9, 289.0], [13.0, 289.0], [13.1, 289.0], [13.2, 290.0], [13.3, 290.0], [13.4, 291.0], [13.5, 291.0], [13.6, 291.0], [13.7, 291.0], [13.8, 291.0], [13.9, 292.0], [14.0, 292.0], [14.1, 292.0], [14.2, 292.0], [14.3, 293.0], [14.4, 293.0], [14.5, 293.0], [14.6, 293.0], [14.7, 293.0], [14.8, 294.0], [14.9, 294.0], [15.0, 294.0], [15.1, 294.0], [15.2, 295.0], [15.3, 295.0], [15.4, 295.0], [15.5, 295.0], [15.6, 295.0], [15.7, 295.0], [15.8, 296.0], [15.9, 296.0], [16.0, 296.0], [16.1, 297.0], [16.2, 298.0], [16.3, 298.0], [16.4, 298.0], [16.5, 298.0], [16.6, 298.0], [16.7, 299.0], [16.8, 299.0], [16.9, 299.0], [17.0, 299.0], [17.1, 300.0], [17.2, 300.0], [17.3, 300.0], [17.4, 300.0], [17.5, 300.0], [17.6, 301.0], [17.7, 301.0], [17.8, 301.0], [17.9, 301.0], [18.0, 301.0], [18.1, 302.0], [18.2, 302.0], [18.3, 302.0], [18.4, 303.0], [18.5, 303.0], [18.6, 303.0], [18.7, 303.0], [18.8, 304.0], [18.9, 304.0], [19.0, 304.0], [19.1, 305.0], [19.2, 305.0], [19.3, 305.0], [19.4, 306.0], [19.5, 306.0], [19.6, 306.0], [19.7, 306.0], [19.8, 307.0], [19.9, 307.0], [20.0, 307.0], [20.1, 308.0], [20.2, 308.0], [20.3, 309.0], [20.4, 309.0], [20.5, 310.0], [20.6, 310.0], [20.7, 310.0], [20.8, 310.0], [20.9, 311.0], [21.0, 311.0], [21.1, 312.0], [21.2, 312.0], [21.3, 312.0], [21.4, 313.0], [21.5, 313.0], [21.6, 314.0], [21.7, 315.0], [21.8, 315.0], [21.9, 315.0], [22.0, 316.0], [22.1, 316.0], [22.2, 316.0], [22.3, 317.0], [22.4, 318.0], [22.5, 318.0], [22.6, 319.0], [22.7, 319.0], [22.8, 319.0], [22.9, 320.0], [23.0, 320.0], [23.1, 321.0], [23.2, 321.0], [23.3, 322.0], [23.4, 322.0], [23.5, 323.0], [23.6, 323.0], [23.7, 324.0], [23.8, 325.0], [23.9, 326.0], [24.0, 326.0], [24.1, 327.0], [24.2, 327.0], [24.3, 328.0], [24.4, 329.0], [24.5, 331.0], [24.6, 331.0], [24.7, 331.0], [24.8, 332.0], [24.9, 333.0], [25.0, 333.0], [25.1, 334.0], [25.2, 334.0], [25.3, 334.0], [25.4, 335.0], [25.5, 336.0], [25.6, 337.0], [25.7, 337.0], [25.8, 338.0], [25.9, 338.0], [26.0, 339.0], [26.1, 339.0], [26.2, 339.0], [26.3, 340.0], [26.4, 340.0], [26.5, 341.0], [26.6, 342.0], [26.7, 343.0], [26.8, 343.0], [26.9, 344.0], [27.0, 344.0], [27.1, 344.0], [27.2, 345.0], [27.3, 346.0], [27.4, 346.0], [27.5, 347.0], [27.6, 348.0], [27.7, 349.0], [27.8, 349.0], [27.9, 350.0], [28.0, 350.0], [28.1, 350.0], [28.2, 351.0], [28.3, 351.0], [28.4, 352.0], [28.5, 352.0], [28.6, 353.0], [28.7, 354.0], [28.8, 355.0], [28.9, 355.0], [29.0, 356.0], [29.1, 357.0], [29.2, 358.0], [29.3, 359.0], [29.4, 360.0], [29.5, 360.0], [29.6, 361.0], [29.7, 362.0], [29.8, 362.0], [29.9, 363.0], [30.0, 364.0], [30.1, 365.0], [30.2, 366.0], [30.3, 367.0], [30.4, 367.0], [30.5, 368.0], [30.6, 369.0], [30.7, 370.0], [30.8, 371.0], [30.9, 372.0], [31.0, 373.0], [31.1, 375.0], [31.2, 375.0], [31.3, 376.0], [31.4, 377.0], [31.5, 377.0], [31.6, 378.0], [31.7, 378.0], [31.8, 379.0], [31.9, 379.0], [32.0, 380.0], [32.1, 382.0], [32.2, 384.0], [32.3, 385.0], [32.4, 386.0], [32.5, 387.0], [32.6, 388.0], [32.7, 389.0], [32.8, 390.0], [32.9, 390.0], [33.0, 391.0], [33.1, 392.0], [33.2, 393.0], [33.3, 394.0], [33.4, 395.0], [33.5, 396.0], [33.6, 396.0], [33.7, 398.0], [33.8, 399.0], [33.9, 400.0], [34.0, 400.0], [34.1, 401.0], [34.2, 402.0], [34.3, 403.0], [34.4, 404.0], [34.5, 405.0], [34.6, 406.0], [34.7, 408.0], [34.8, 408.0], [34.9, 409.0], [35.0, 410.0], [35.1, 411.0], [35.2, 413.0], [35.3, 413.0], [35.4, 415.0], [35.5, 416.0], [35.6, 417.0], [35.7, 419.0], [35.8, 420.0], [35.9, 421.0], [36.0, 422.0], [36.1, 423.0], [36.2, 425.0], [36.3, 426.0], [36.4, 429.0], [36.5, 430.0], [36.6, 430.0], [36.7, 433.0], [36.8, 434.0], [36.9, 438.0], [37.0, 439.0], [37.1, 440.0], [37.2, 441.0], [37.3, 442.0], [37.4, 444.0], [37.5, 446.0], [37.6, 447.0], [37.7, 449.0], [37.8, 451.0], [37.9, 452.0], [38.0, 452.0], [38.1, 453.0], [38.2, 455.0], [38.3, 455.0], [38.4, 456.0], [38.5, 457.0], [38.6, 458.0], [38.7, 459.0], [38.8, 461.0], [38.9, 462.0], [39.0, 463.0], [39.1, 464.0], [39.2, 466.0], [39.3, 466.0], [39.4, 469.0], [39.5, 470.0], [39.6, 473.0], [39.7, 475.0], [39.8, 477.0], [39.9, 478.0], [40.0, 479.0], [40.1, 480.0], [40.2, 483.0], [40.3, 484.0], [40.4, 487.0], [40.5, 489.0], [40.6, 492.0], [40.7, 493.0], [40.8, 494.0], [40.9, 494.0], [41.0, 496.0], [41.1, 497.0], [41.2, 501.0], [41.3, 502.0], [41.4, 506.0], [41.5, 508.0], [41.6, 508.0], [41.7, 509.0], [41.8, 511.0], [41.9, 512.0], [42.0, 513.0], [42.1, 516.0], [42.2, 517.0], [42.3, 519.0], [42.4, 522.0], [42.5, 524.0], [42.6, 526.0], [42.7, 528.0], [42.8, 529.0], [42.9, 531.0], [43.0, 532.0], [43.1, 534.0], [43.2, 535.0], [43.3, 537.0], [43.4, 540.0], [43.5, 543.0], [43.6, 547.0], [43.7, 549.0], [43.8, 556.0], [43.9, 557.0], [44.0, 559.0], [44.1, 560.0], [44.2, 563.0], [44.3, 566.0], [44.4, 567.0], [44.5, 571.0], [44.6, 572.0], [44.7, 573.0], [44.8, 576.0], [44.9, 577.0], [45.0, 579.0], [45.1, 580.0], [45.2, 586.0], [45.3, 588.0], [45.4, 590.0], [45.5, 595.0], [45.6, 597.0], [45.7, 600.0], [45.8, 602.0], [45.9, 605.0], [46.0, 606.0], [46.1, 608.0], [46.2, 609.0], [46.3, 612.0], [46.4, 613.0], [46.5, 615.0], [46.6, 619.0], [46.7, 621.0], [46.8, 623.0], [46.9, 625.0], [47.0, 628.0], [47.1, 630.0], [47.2, 631.0], [47.3, 633.0], [47.4, 635.0], [47.5, 636.0], [47.6, 637.0], [47.7, 641.0], [47.8, 642.0], [47.9, 644.0], [48.0, 647.0], [48.1, 648.0], [48.2, 650.0], [48.3, 652.0], [48.4, 655.0], [48.5, 658.0], [48.6, 662.0], [48.7, 665.0], [48.8, 667.0], [48.9, 671.0], [49.0, 672.0], [49.1, 675.0], [49.2, 678.0], [49.3, 680.0], [49.4, 685.0], [49.5, 687.0], [49.6, 687.0], [49.7, 689.0], [49.8, 694.0], [49.9, 696.0], [50.0, 698.0], [50.1, 701.0], [50.2, 703.0], [50.3, 708.0], [50.4, 709.0], [50.5, 711.0], [50.6, 713.0], [50.7, 714.0], [50.8, 717.0], [50.9, 718.0], [51.0, 720.0], [51.1, 722.0], [51.2, 729.0], [51.3, 730.0], [51.4, 731.0], [51.5, 734.0], [51.6, 735.0], [51.7, 738.0], [51.8, 739.0], [51.9, 742.0], [52.0, 743.0], [52.1, 745.0], [52.2, 747.0], [52.3, 748.0], [52.4, 749.0], [52.5, 751.0], [52.6, 753.0], [52.7, 755.0], [52.8, 757.0], [52.9, 761.0], [53.0, 762.0], [53.1, 766.0], [53.2, 768.0], [53.3, 768.0], [53.4, 770.0], [53.5, 773.0], [53.6, 775.0], [53.7, 778.0], [53.8, 781.0], [53.9, 782.0], [54.0, 783.0], [54.1, 785.0], [54.2, 786.0], [54.3, 788.0], [54.4, 791.0], [54.5, 793.0], [54.6, 796.0], [54.7, 797.0], [54.8, 799.0], [54.9, 803.0], [55.0, 804.0], [55.1, 806.0], [55.2, 808.0], [55.3, 812.0], [55.4, 813.0], [55.5, 814.0], [55.6, 816.0], [55.7, 818.0], [55.8, 820.0], [55.9, 823.0], [56.0, 824.0], [56.1, 828.0], [56.2, 831.0], [56.3, 833.0], [56.4, 834.0], [56.5, 837.0], [56.6, 838.0], [56.7, 841.0], [56.8, 844.0], [56.9, 846.0], [57.0, 847.0], [57.1, 853.0], [57.2, 855.0], [57.3, 859.0], [57.4, 860.0], [57.5, 862.0], [57.6, 864.0], [57.7, 867.0], [57.8, 868.0], [57.9, 870.0], [58.0, 872.0], [58.1, 876.0], [58.2, 882.0], [58.3, 883.0], [58.4, 886.0], [58.5, 889.0], [58.6, 891.0], [58.7, 893.0], [58.8, 898.0], [58.9, 900.0], [59.0, 904.0], [59.1, 907.0], [59.2, 910.0], [59.3, 914.0], [59.4, 917.0], [59.5, 920.0], [59.6, 922.0], [59.7, 923.0], [59.8, 928.0], [59.9, 931.0], [60.0, 932.0], [60.1, 936.0], [60.2, 937.0], [60.3, 940.0], [60.4, 940.0], [60.5, 943.0], [60.6, 946.0], [60.7, 949.0], [60.8, 950.0], [60.9, 953.0], [61.0, 955.0], [61.1, 956.0], [61.2, 958.0], [61.3, 964.0], [61.4, 968.0], [61.5, 970.0], [61.6, 974.0], [61.7, 975.0], [61.8, 977.0], [61.9, 980.0], [62.0, 981.0], [62.1, 983.0], [62.2, 984.0], [62.3, 988.0], [62.4, 991.0], [62.5, 992.0], [62.6, 993.0], [62.7, 996.0], [62.8, 998.0], [62.9, 999.0], [63.0, 1003.0], [63.1, 1004.0], [63.2, 1008.0], [63.3, 1009.0], [63.4, 1012.0], [63.5, 1013.0], [63.6, 1016.0], [63.7, 1017.0], [63.8, 1021.0], [63.9, 1021.0], [64.0, 1022.0], [64.1, 1025.0], [64.2, 1027.0], [64.3, 1029.0], [64.4, 1030.0], [64.5, 1033.0], [64.6, 1035.0], [64.7, 1036.0], [64.8, 1039.0], [64.9, 1041.0], [65.0, 1043.0], [65.1, 1044.0], [65.2, 1047.0], [65.3, 1049.0], [65.4, 1051.0], [65.5, 1054.0], [65.6, 1057.0], [65.7, 1058.0], [65.8, 1059.0], [65.9, 1062.0], [66.0, 1067.0], [66.1, 1067.0], [66.2, 1068.0], [66.3, 1070.0], [66.4, 1073.0], [66.5, 1074.0], [66.6, 1076.0], [66.7, 1077.0], [66.8, 1078.0], [66.9, 1079.0], [67.0, 1083.0], [67.1, 1085.0], [67.2, 1087.0], [67.3, 1091.0], [67.4, 1092.0], [67.5, 1094.0], [67.6, 1095.0], [67.7, 1096.0], [67.8, 1098.0], [67.9, 1101.0], [68.0, 1102.0], [68.1, 1104.0], [68.2, 1107.0], [68.3, 1109.0], [68.4, 1113.0], [68.5, 1114.0], [68.6, 1116.0], [68.7, 1118.0], [68.8, 1120.0], [68.9, 1120.0], [69.0, 1122.0], [69.1, 1125.0], [69.2, 1127.0], [69.3, 1129.0], [69.4, 1133.0], [69.5, 1136.0], [69.6, 1137.0], [69.7, 1139.0], [69.8, 1142.0], [69.9, 1144.0], [70.0, 1146.0], [70.1, 1150.0], [70.2, 1151.0], [70.3, 1152.0], [70.4, 1153.0], [70.5, 1155.0], [70.6, 1159.0], [70.7, 1159.0], [70.8, 1160.0], [70.9, 1161.0], [71.0, 1164.0], [71.1, 1166.0], [71.2, 1169.0], [71.3, 1170.0], [71.4, 1174.0], [71.5, 1178.0], [71.6, 1180.0], [71.7, 1182.0], [71.8, 1183.0], [71.9, 1185.0], [72.0, 1187.0], [72.1, 1188.0], [72.2, 1189.0], [72.3, 1193.0], [72.4, 1196.0], [72.5, 1199.0], [72.6, 1200.0], [72.7, 1201.0], [72.8, 1204.0], [72.9, 1205.0], [73.0, 1206.0], [73.1, 1207.0], [73.2, 1210.0], [73.3, 1212.0], [73.4, 1214.0], [73.5, 1216.0], [73.6, 1217.0], [73.7, 1218.0], [73.8, 1221.0], [73.9, 1221.0], [74.0, 1224.0], [74.1, 1226.0], [74.2, 1229.0], [74.3, 1232.0], [74.4, 1235.0], [74.5, 1238.0], [74.6, 1239.0], [74.7, 1241.0], [74.8, 1241.0], [74.9, 1244.0], [75.0, 1245.0], [75.1, 1247.0], [75.2, 1251.0], [75.3, 1254.0], [75.4, 1255.0], [75.5, 1257.0], [75.6, 1260.0], [75.7, 1262.0], [75.8, 1265.0], [75.9, 1269.0], [76.0, 1270.0], [76.1, 1272.0], [76.2, 1273.0], [76.3, 1274.0], [76.4, 1279.0], [76.5, 1282.0], [76.6, 1284.0], [76.7, 1285.0], [76.8, 1286.0], [76.9, 1288.0], [77.0, 1290.0], [77.1, 1290.0], [77.2, 1293.0], [77.3, 1294.0], [77.4, 1299.0], [77.5, 1301.0], [77.6, 1302.0], [77.7, 1303.0], [77.8, 1306.0], [77.9, 1308.0], [78.0, 1312.0], [78.1, 1314.0], [78.2, 1316.0], [78.3, 1318.0], [78.4, 1321.0], [78.5, 1327.0], [78.6, 1328.0], [78.7, 1330.0], [78.8, 1333.0], [78.9, 1340.0], [79.0, 1344.0], [79.1, 1348.0], [79.2, 1350.0], [79.3, 1353.0], [79.4, 1361.0], [79.5, 1366.0], [79.6, 1366.0], [79.7, 1368.0], [79.8, 1371.0], [79.9, 1375.0], [80.0, 1378.0], [80.1, 1385.0], [80.2, 1391.0], [80.3, 1393.0], [80.4, 1397.0], [80.5, 1399.0], [80.6, 1402.0], [80.7, 1407.0], [80.8, 1407.0], [80.9, 1411.0], [81.0, 1417.0], [81.1, 1419.0], [81.2, 1424.0], [81.3, 1428.0], [81.4, 1434.0], [81.5, 1436.0], [81.6, 1440.0], [81.7, 1446.0], [81.8, 1457.0], [81.9, 1463.0], [82.0, 1471.0], [82.1, 1473.0], [82.2, 1479.0], [82.3, 1486.0], [82.4, 1493.0], [82.5, 1497.0], [82.6, 1499.0], [82.7, 1505.0], [82.8, 1511.0], [82.9, 1518.0], [83.0, 1526.0], [83.1, 1535.0], [83.2, 1542.0], [83.3, 1549.0], [83.4, 1556.0], [83.5, 1564.0], [83.6, 1565.0], [83.7, 1572.0], [83.8, 1574.0], [83.9, 1580.0], [84.0, 1583.0], [84.1, 1588.0], [84.2, 1589.0], [84.3, 1594.0], [84.4, 1601.0], [84.5, 1603.0], [84.6, 1607.0], [84.7, 1609.0], [84.8, 1620.0], [84.9, 1624.0], [85.0, 1630.0], [85.1, 1639.0], [85.2, 1644.0], [85.3, 1648.0], [85.4, 1655.0], [85.5, 1667.0], [85.6, 1671.0], [85.7, 1681.0], [85.8, 1686.0], [85.9, 1694.0], [86.0, 1699.0], [86.1, 1709.0], [86.2, 1716.0], [86.3, 1720.0], [86.4, 1730.0], [86.5, 1734.0], [86.6, 1744.0], [86.7, 1749.0], [86.8, 1754.0], [86.9, 1759.0], [87.0, 1766.0], [87.1, 1772.0], [87.2, 1780.0], [87.3, 1786.0], [87.4, 1788.0], [87.5, 1792.0], [87.6, 1802.0], [87.7, 1815.0], [87.8, 1822.0], [87.9, 1828.0], [88.0, 1837.0], [88.1, 1844.0], [88.2, 1850.0], [88.3, 1857.0], [88.4, 1861.0], [88.5, 1868.0], [88.6, 1875.0], [88.7, 1882.0], [88.8, 1885.0], [88.9, 1897.0], [89.0, 1908.0], [89.1, 1916.0], [89.2, 1921.0], [89.3, 1926.0], [89.4, 1932.0], [89.5, 1936.0], [89.6, 1941.0], [89.7, 1944.0], [89.8, 1951.0], [89.9, 1960.0], [90.0, 1962.0], [90.1, 1965.0], [90.2, 1979.0], [90.3, 1983.0], [90.4, 1993.0], [90.5, 1999.0], [90.6, 2004.0], [90.7, 2017.0], [90.8, 2024.0], [90.9, 2026.0], [91.0, 2037.0], [91.1, 2040.0], [91.2, 2045.0], [91.3, 2054.0], [91.4, 2064.0], [91.5, 2069.0], [91.6, 2072.0], [91.7, 2078.0], [91.8, 2083.0], [91.9, 2092.0], [92.0, 2097.0], [92.1, 2102.0], [92.2, 2111.0], [92.3, 2116.0], [92.4, 2118.0], [92.5, 2122.0], [92.6, 2125.0], [92.7, 2132.0], [92.8, 2135.0], [92.9, 2142.0], [93.0, 2151.0], [93.1, 2164.0], [93.2, 2175.0], [93.3, 2177.0], [93.4, 2180.0], [93.5, 2186.0], [93.6, 2199.0], [93.7, 2209.0], [93.8, 2217.0], [93.9, 2230.0], [94.0, 2248.0], [94.1, 2254.0], [94.2, 2261.0], [94.3, 2277.0], [94.4, 2285.0], [94.5, 2300.0], [94.6, 2311.0], [94.7, 2324.0], [94.8, 2343.0], [94.9, 2360.0], [95.0, 2382.0], [95.1, 2396.0], [95.2, 2402.0], [95.3, 2423.0], [95.4, 2449.0], [95.5, 2470.0], [95.6, 2481.0], [95.7, 2495.0], [95.8, 2513.0], [95.9, 2533.0], [96.0, 2552.0], [96.1, 2599.0], [96.2, 2645.0], [96.3, 2707.0], [96.4, 2883.0], [96.5, 2920.0], [96.6, 2994.0], [96.7, 3028.0], [96.8, 3158.0], [96.9, 3197.0], [97.0, 3339.0], [97.1, 3434.0], [97.2, 3529.0], [97.3, 3668.0], [97.4, 3757.0], [97.5, 3850.0], [97.6, 3887.0], [97.7, 3926.0], [97.8, 3940.0], [97.9, 4028.0], [98.0, 4083.0], [98.1, 4132.0], [98.2, 4193.0], [98.3, 4226.0], [98.4, 4326.0], [98.5, 4367.0], [98.6, 4403.0], [98.7, 4476.0], [98.8, 4526.0], [98.9, 4640.0], [99.0, 4810.0], [99.1, 4964.0], [99.2, 5105.0], [99.3, 5197.0], [99.4, 5273.0], [99.5, 5385.0], [99.6, 5629.0], [99.7, 5820.0], [99.8, 6048.0], [99.9, 6282.0], [100.0, 6596.0]], "isOverall": false, "label": "Load test", "isController": false}, {"data": [[0.0, 9.0], [0.1, 9.0], [0.2, 10.0], [0.3, 11.0], [0.4, 12.0], [0.5, 12.0], [0.6, 13.0], [0.7, 14.0], [0.8, 15.0], [0.9, 18.0], [1.0, 28.0], [1.1, 31.0], [1.2, 32.0], [1.3, 32.0], [1.4, 36.0], [1.5, 48.0], [1.6, 59.0], [1.7, 72.0], [1.8, 84.0], [1.9, 84.0], [2.0, 100.0], [2.1, 118.0], [2.2, 132.0], [2.3, 148.0], [2.4, 167.0], [2.5, 199.0], [2.6, 210.0], [2.7, 213.0], [2.8, 255.0], [2.9, 258.0], [3.0, 260.0], [3.1, 261.0], [3.2, 262.0], [3.3, 262.0], [3.4, 263.0], [3.5, 264.0], [3.6, 264.0], [3.7, 265.0], [3.8, 266.0], [3.9, 267.0], [4.0, 267.0], [4.1, 267.0], [4.2, 268.0], [4.3, 269.0], [4.4, 269.0], [4.5, 270.0], [4.6, 270.0], [4.7, 271.0], [4.8, 271.0], [4.9, 272.0], [5.0, 272.0], [5.1, 273.0], [5.2, 273.0], [5.3, 273.0], [5.4, 274.0], [5.5, 275.0], [5.6, 275.0], [5.7, 275.0], [5.8, 276.0], [5.9, 276.0], [6.0, 276.0], [6.1, 277.0], [6.2, 277.0], [6.3, 278.0], [6.4, 278.0], [6.5, 278.0], [6.6, 278.0], [6.7, 279.0], [6.8, 279.0], [6.9, 280.0], [7.0, 280.0], [7.1, 280.0], [7.2, 280.0], [7.3, 281.0], [7.4, 281.0], [7.5, 281.0], [7.6, 282.0], [7.7, 282.0], [7.8, 282.0], [7.9, 282.0], [8.0, 283.0], [8.1, 283.0], [8.2, 284.0], [8.3, 284.0], [8.4, 284.0], [8.5, 284.0], [8.6, 285.0], [8.7, 285.0], [8.8, 285.0], [8.9, 286.0], [9.0, 286.0], [9.1, 286.0], [9.2, 286.0], [9.3, 286.0], [9.4, 287.0], [9.5, 287.0], [9.6, 288.0], [9.7, 288.0], [9.8, 288.0], [9.9, 288.0], [10.0, 288.0], [10.1, 289.0], [10.2, 289.0], [10.3, 289.0], [10.4, 290.0], [10.5, 290.0], [10.6, 290.0], [10.7, 290.0], [10.8, 291.0], [10.9, 291.0], [11.0, 291.0], [11.1, 291.0], [11.2, 292.0], [11.3, 292.0], [11.4, 292.0], [11.5, 292.0], [11.6, 293.0], [11.7, 293.0], [11.8, 293.0], [11.9, 293.0], [12.0, 294.0], [12.1, 294.0], [12.2, 294.0], [12.3, 295.0], [12.4, 295.0], [12.5, 295.0], [12.6, 296.0], [12.7, 296.0], [12.8, 296.0], [12.9, 297.0], [13.0, 297.0], [13.1, 297.0], [13.2, 298.0], [13.3, 298.0], [13.4, 298.0], [13.5, 299.0], [13.6, 299.0], [13.7, 299.0], [13.8, 300.0], [13.9, 300.0], [14.0, 301.0], [14.1, 301.0], [14.2, 301.0], [14.3, 302.0], [14.4, 302.0], [14.5, 303.0], [14.6, 303.0], [14.7, 303.0], [14.8, 304.0], [14.9, 304.0], [15.0, 305.0], [15.1, 305.0], [15.2, 306.0], [15.3, 306.0], [15.4, 306.0], [15.5, 307.0], [15.6, 307.0], [15.7, 308.0], [15.8, 308.0], [15.9, 308.0], [16.0, 309.0], [16.1, 309.0], [16.2, 310.0], [16.3, 310.0], [16.4, 311.0], [16.5, 311.0], [16.6, 311.0], [16.7, 312.0], [16.8, 312.0], [16.9, 313.0], [17.0, 313.0], [17.1, 314.0], [17.2, 314.0], [17.3, 315.0], [17.4, 315.0], [17.5, 315.0], [17.6, 316.0], [17.7, 316.0], [17.8, 317.0], [17.9, 318.0], [18.0, 318.0], [18.1, 319.0], [18.2, 319.0], [18.3, 320.0], [18.4, 321.0], [18.5, 321.0], [18.6, 322.0], [18.7, 323.0], [18.8, 324.0], [18.9, 324.0], [19.0, 325.0], [19.1, 325.0], [19.2, 326.0], [19.3, 326.0], [19.4, 327.0], [19.5, 328.0], [19.6, 328.0], [19.7, 329.0], [19.8, 330.0], [19.9, 331.0], [20.0, 331.0], [20.1, 332.0], [20.2, 333.0], [20.3, 334.0], [20.4, 334.0], [20.5, 335.0], [20.6, 335.0], [20.7, 336.0], [20.8, 336.0], [20.9, 337.0], [21.0, 338.0], [21.1, 339.0], [21.2, 339.0], [21.3, 340.0], [21.4, 340.0], [21.5, 341.0], [21.6, 342.0], [21.7, 343.0], [21.8, 344.0], [21.9, 345.0], [22.0, 345.0], [22.1, 346.0], [22.2, 347.0], [22.3, 347.0], [22.4, 348.0], [22.5, 349.0], [22.6, 349.0], [22.7, 350.0], [22.8, 350.0], [22.9, 351.0], [23.0, 352.0], [23.1, 352.0], [23.2, 353.0], [23.3, 353.0], [23.4, 354.0], [23.5, 354.0], [23.6, 355.0], [23.7, 356.0], [23.8, 356.0], [23.9, 357.0], [24.0, 357.0], [24.1, 358.0], [24.2, 358.0], [24.3, 359.0], [24.4, 359.0], [24.5, 360.0], [24.6, 360.0], [24.7, 361.0], [24.8, 362.0], [24.9, 363.0], [25.0, 363.0], [25.1, 364.0], [25.2, 364.0], [25.3, 365.0], [25.4, 365.0], [25.5, 367.0], [25.6, 367.0], [25.7, 368.0], [25.8, 368.0], [25.9, 369.0], [26.0, 370.0], [26.1, 371.0], [26.2, 371.0], [26.3, 372.0], [26.4, 372.0], [26.5, 373.0], [26.6, 374.0], [26.7, 375.0], [26.8, 376.0], [26.9, 376.0], [27.0, 377.0], [27.1, 377.0], [27.2, 378.0], [27.3, 379.0], [27.4, 379.0], [27.5, 380.0], [27.6, 381.0], [27.7, 382.0], [27.8, 383.0], [27.9, 384.0], [28.0, 385.0], [28.1, 385.0], [28.2, 387.0], [28.3, 388.0], [28.4, 389.0], [28.5, 390.0], [28.6, 390.0], [28.7, 392.0], [28.8, 393.0], [28.9, 394.0], [29.0, 394.0], [29.1, 395.0], [29.2, 396.0], [29.3, 396.0], [29.4, 398.0], [29.5, 399.0], [29.6, 400.0], [29.7, 401.0], [29.8, 402.0], [29.9, 402.0], [30.0, 403.0], [30.1, 404.0], [30.2, 405.0], [30.3, 407.0], [30.4, 407.0], [30.5, 409.0], [30.6, 410.0], [30.7, 411.0], [30.8, 412.0], [30.9, 413.0], [31.0, 413.0], [31.1, 414.0], [31.2, 415.0], [31.3, 416.0], [31.4, 417.0], [31.5, 418.0], [31.6, 420.0], [31.7, 421.0], [31.8, 422.0], [31.9, 424.0], [32.0, 426.0], [32.1, 427.0], [32.2, 429.0], [32.3, 430.0], [32.4, 431.0], [32.5, 433.0], [32.6, 434.0], [32.7, 436.0], [32.8, 437.0], [32.9, 438.0], [33.0, 440.0], [33.1, 441.0], [33.2, 443.0], [33.3, 445.0], [33.4, 447.0], [33.5, 449.0], [33.6, 450.0], [33.7, 452.0], [33.8, 453.0], [33.9, 455.0], [34.0, 457.0], [34.1, 458.0], [34.2, 460.0], [34.3, 462.0], [34.4, 463.0], [34.5, 464.0], [34.6, 467.0], [34.7, 468.0], [34.8, 470.0], [34.9, 471.0], [35.0, 473.0], [35.1, 475.0], [35.2, 477.0], [35.3, 479.0], [35.4, 480.0], [35.5, 482.0], [35.6, 483.0], [35.7, 484.0], [35.8, 486.0], [35.9, 487.0], [36.0, 489.0], [36.1, 491.0], [36.2, 493.0], [36.3, 495.0], [36.4, 497.0], [36.5, 500.0], [36.6, 501.0], [36.7, 504.0], [36.8, 506.0], [36.9, 508.0], [37.0, 509.0], [37.1, 512.0], [37.2, 514.0], [37.3, 517.0], [37.4, 519.0], [37.5, 522.0], [37.6, 526.0], [37.7, 528.0], [37.8, 531.0], [37.9, 533.0], [38.0, 535.0], [38.1, 538.0], [38.2, 542.0], [38.3, 545.0], [38.4, 547.0], [38.5, 549.0], [38.6, 553.0], [38.7, 557.0], [38.8, 560.0], [38.9, 562.0], [39.0, 565.0], [39.1, 570.0], [39.2, 575.0], [39.3, 578.0], [39.4, 580.0], [39.5, 584.0], [39.6, 587.0], [39.7, 592.0], [39.8, 595.0], [39.9, 600.0], [40.0, 603.0], [40.1, 606.0], [40.2, 608.0], [40.3, 612.0], [40.4, 615.0], [40.5, 619.0], [40.6, 623.0], [40.7, 626.0], [40.8, 631.0], [40.9, 636.0], [41.0, 642.0], [41.1, 646.0], [41.2, 651.0], [41.3, 654.0], [41.4, 658.0], [41.5, 661.0], [41.6, 664.0], [41.7, 667.0], [41.8, 669.0], [41.9, 673.0], [42.0, 678.0], [42.1, 683.0], [42.2, 686.0], [42.3, 689.0], [42.4, 692.0], [42.5, 696.0], [42.6, 699.0], [42.7, 702.0], [42.8, 705.0], [42.9, 708.0], [43.0, 714.0], [43.1, 719.0], [43.2, 723.0], [43.3, 726.0], [43.4, 729.0], [43.5, 732.0], [43.6, 736.0], [43.7, 740.0], [43.8, 745.0], [43.9, 748.0], [44.0, 752.0], [44.1, 756.0], [44.2, 759.0], [44.3, 764.0], [44.4, 768.0], [44.5, 771.0], [44.6, 775.0], [44.7, 778.0], [44.8, 782.0], [44.9, 786.0], [45.0, 790.0], [45.1, 793.0], [45.2, 796.0], [45.3, 798.0], [45.4, 805.0], [45.5, 809.0], [45.6, 813.0], [45.7, 817.0], [45.8, 822.0], [45.9, 825.0], [46.0, 829.0], [46.1, 832.0], [46.2, 836.0], [46.3, 838.0], [46.4, 842.0], [46.5, 845.0], [46.6, 849.0], [46.7, 851.0], [46.8, 857.0], [46.9, 859.0], [47.0, 861.0], [47.1, 863.0], [47.2, 865.0], [47.3, 869.0], [47.4, 871.0], [47.5, 875.0], [47.6, 877.0], [47.7, 880.0], [47.8, 882.0], [47.9, 884.0], [48.0, 887.0], [48.1, 890.0], [48.2, 893.0], [48.3, 896.0], [48.4, 898.0], [48.5, 899.0], [48.6, 904.0], [48.7, 909.0], [48.8, 912.0], [48.9, 915.0], [49.0, 919.0], [49.1, 923.0], [49.2, 926.0], [49.3, 928.0], [49.4, 931.0], [49.5, 934.0], [49.6, 937.0], [49.7, 941.0], [49.8, 944.0], [49.9, 945.0], [50.0, 949.0], [50.1, 952.0], [50.2, 955.0], [50.3, 958.0], [50.4, 961.0], [50.5, 963.0], [50.6, 967.0], [50.7, 970.0], [50.8, 974.0], [50.9, 977.0], [51.0, 980.0], [51.1, 984.0], [51.2, 988.0], [51.3, 991.0], [51.4, 995.0], [51.5, 998.0], [51.6, 1000.0], [51.7, 1002.0], [51.8, 1006.0], [51.9, 1008.0], [52.0, 1011.0], [52.1, 1013.0], [52.2, 1015.0], [52.3, 1018.0], [52.4, 1021.0], [52.5, 1024.0], [52.6, 1026.0], [52.7, 1030.0], [52.8, 1033.0], [52.9, 1036.0], [53.0, 1040.0], [53.1, 1042.0], [53.2, 1044.0], [53.3, 1049.0], [53.4, 1052.0], [53.5, 1055.0], [53.6, 1059.0], [53.7, 1062.0], [53.8, 1065.0], [53.9, 1068.0], [54.0, 1070.0], [54.1, 1073.0], [54.2, 1077.0], [54.3, 1081.0], [54.4, 1084.0], [54.5, 1087.0], [54.6, 1089.0], [54.7, 1092.0], [54.8, 1097.0], [54.9, 1100.0], [55.0, 1105.0], [55.1, 1109.0], [55.2, 1112.0], [55.3, 1115.0], [55.4, 1119.0], [55.5, 1122.0], [55.6, 1123.0], [55.7, 1126.0], [55.8, 1130.0], [55.9, 1132.0], [56.0, 1134.0], [56.1, 1138.0], [56.2, 1142.0], [56.3, 1147.0], [56.4, 1150.0], [56.5, 1153.0], [56.6, 1156.0], [56.7, 1159.0], [56.8, 1163.0], [56.9, 1167.0], [57.0, 1168.0], [57.1, 1170.0], [57.2, 1174.0], [57.3, 1176.0], [57.4, 1180.0], [57.5, 1182.0], [57.6, 1185.0], [57.7, 1191.0], [57.8, 1193.0], [57.9, 1195.0], [58.0, 1200.0], [58.1, 1204.0], [58.2, 1207.0], [58.3, 1209.0], [58.4, 1212.0], [58.5, 1217.0], [58.6, 1220.0], [58.7, 1226.0], [58.8, 1229.0], [58.9, 1232.0], [59.0, 1236.0], [59.1, 1239.0], [59.2, 1242.0], [59.3, 1245.0], [59.4, 1251.0], [59.5, 1255.0], [59.6, 1261.0], [59.7, 1265.0], [59.8, 1269.0], [59.9, 1273.0], [60.0, 1276.0], [60.1, 1282.0], [60.2, 1285.0], [60.3, 1290.0], [60.4, 1293.0], [60.5, 1297.0], [60.6, 1303.0], [60.7, 1307.0], [60.8, 1311.0], [60.9, 1315.0], [61.0, 1319.0], [61.1, 1322.0], [61.2, 1325.0], [61.3, 1331.0], [61.4, 1336.0], [61.5, 1340.0], [61.6, 1344.0], [61.7, 1347.0], [61.8, 1353.0], [61.9, 1359.0], [62.0, 1362.0], [62.1, 1365.0], [62.2, 1372.0], [62.3, 1377.0], [62.4, 1382.0], [62.5, 1385.0], [62.6, 1390.0], [62.7, 1393.0], [62.8, 1398.0], [62.9, 1402.0], [63.0, 1405.0], [63.1, 1409.0], [63.2, 1413.0], [63.3, 1416.0], [63.4, 1421.0], [63.5, 1423.0], [63.6, 1426.0], [63.7, 1431.0], [63.8, 1439.0], [63.9, 1446.0], [64.0, 1451.0], [64.1, 1456.0], [64.2, 1459.0], [64.3, 1464.0], [64.4, 1468.0], [64.5, 1472.0], [64.6, 1477.0], [64.7, 1481.0], [64.8, 1485.0], [64.9, 1489.0], [65.0, 1493.0], [65.1, 1496.0], [65.2, 1499.0], [65.3, 1505.0], [65.4, 1510.0], [65.5, 1515.0], [65.6, 1524.0], [65.7, 1528.0], [65.8, 1534.0], [65.9, 1539.0], [66.0, 1544.0], [66.1, 1550.0], [66.2, 1553.0], [66.3, 1556.0], [66.4, 1559.0], [66.5, 1563.0], [66.6, 1567.0], [66.7, 1572.0], [66.8, 1577.0], [66.9, 1579.0], [67.0, 1583.0], [67.1, 1586.0], [67.2, 1590.0], [67.3, 1593.0], [67.4, 1601.0], [67.5, 1608.0], [67.6, 1615.0], [67.7, 1619.0], [67.8, 1623.0], [67.9, 1628.0], [68.0, 1633.0], [68.1, 1638.0], [68.2, 1642.0], [68.3, 1646.0], [68.4, 1649.0], [68.5, 1654.0], [68.6, 1657.0], [68.7, 1663.0], [68.8, 1666.0], [68.9, 1670.0], [69.0, 1679.0], [69.1, 1684.0], [69.2, 1693.0], [69.3, 1696.0], [69.4, 1700.0], [69.5, 1703.0], [69.6, 1707.0], [69.7, 1710.0], [69.8, 1715.0], [69.9, 1720.0], [70.0, 1724.0], [70.1, 1729.0], [70.2, 1737.0], [70.3, 1742.0], [70.4, 1749.0], [70.5, 1757.0], [70.6, 1764.0], [70.7, 1767.0], [70.8, 1770.0], [70.9, 1775.0], [71.0, 1780.0], [71.1, 1782.0], [71.2, 1788.0], [71.3, 1792.0], [71.4, 1796.0], [71.5, 1800.0], [71.6, 1805.0], [71.7, 1809.0], [71.8, 1813.0], [71.9, 1817.0], [72.0, 1820.0], [72.1, 1826.0], [72.2, 1834.0], [72.3, 1837.0], [72.4, 1842.0], [72.5, 1847.0], [72.6, 1850.0], [72.7, 1855.0], [72.8, 1858.0], [72.9, 1864.0], [73.0, 1868.0], [73.1, 1872.0], [73.2, 1877.0], [73.3, 1883.0], [73.4, 1886.0], [73.5, 1889.0], [73.6, 1896.0], [73.7, 1898.0], [73.8, 1901.0], [73.9, 1903.0], [74.0, 1907.0], [74.1, 1914.0], [74.2, 1918.0], [74.3, 1921.0], [74.4, 1926.0], [74.5, 1930.0], [74.6, 1933.0], [74.7, 1937.0], [74.8, 1942.0], [74.9, 1948.0], [75.0, 1953.0], [75.1, 1958.0], [75.2, 1962.0], [75.3, 1965.0], [75.4, 1969.0], [75.5, 1973.0], [75.6, 1977.0], [75.7, 1984.0], [75.8, 1990.0], [75.9, 1993.0], [76.0, 1998.0], [76.1, 2001.0], [76.2, 2007.0], [76.3, 2010.0], [76.4, 2016.0], [76.5, 2020.0], [76.6, 2025.0], [76.7, 2032.0], [76.8, 2038.0], [76.9, 2043.0], [77.0, 2049.0], [77.1, 2054.0], [77.2, 2060.0], [77.3, 2066.0], [77.4, 2071.0], [77.5, 2075.0], [77.6, 2080.0], [77.7, 2084.0], [77.8, 2090.0], [77.9, 2094.0], [78.0, 2099.0], [78.1, 2105.0], [78.2, 2109.0], [78.3, 2113.0], [78.4, 2118.0], [78.5, 2123.0], [78.6, 2128.0], [78.7, 2134.0], [78.8, 2138.0], [78.9, 2145.0], [79.0, 2155.0], [79.1, 2161.0], [79.2, 2167.0], [79.3, 2172.0], [79.4, 2178.0], [79.5, 2184.0], [79.6, 2189.0], [79.7, 2193.0], [79.8, 2198.0], [79.9, 2206.0], [80.0, 2213.0], [80.1, 2220.0], [80.2, 2226.0], [80.3, 2238.0], [80.4, 2254.0], [80.5, 2263.0], [80.6, 2272.0], [80.7, 2283.0], [80.8, 2292.0], [80.9, 2301.0], [81.0, 2310.0], [81.1, 2333.0], [81.2, 2342.0], [81.3, 2360.0], [81.4, 2373.0], [81.5, 2390.0], [81.6, 2401.0], [81.7, 2411.0], [81.8, 2431.0], [81.9, 2449.0], [82.0, 2458.0], [82.1, 2477.0], [82.2, 2492.0], [82.3, 2505.0], [82.4, 2517.0], [82.5, 2538.0], [82.6, 2556.0], [82.7, 2567.0], [82.8, 2580.0], [82.9, 2600.0], [83.0, 2625.0], [83.1, 2642.0], [83.2, 2677.0], [83.3, 2697.0], [83.4, 2721.0], [83.5, 2748.0], [83.6, 2770.0], [83.7, 2787.0], [83.8, 2802.0], [83.9, 2823.0], [84.0, 2843.0], [84.1, 2860.0], [84.2, 2877.0], [84.3, 2896.0], [84.4, 2905.0], [84.5, 2925.0], [84.6, 2939.0], [84.7, 2954.0], [84.8, 2969.0], [84.9, 2991.0], [85.0, 3006.0], [85.1, 3019.0], [85.2, 3027.0], [85.3, 3042.0], [85.4, 3056.0], [85.5, 3077.0], [85.6, 3087.0], [85.7, 3101.0], [85.8, 3114.0], [85.9, 3126.0], [86.0, 3142.0], [86.1, 3160.0], [86.2, 3175.0], [86.3, 3187.0], [86.4, 3193.0], [86.5, 3198.0], [86.6, 3211.0], [86.7, 3229.0], [86.8, 3237.0], [86.9, 3253.0], [87.0, 3260.0], [87.1, 3268.0], [87.2, 3285.0], [87.3, 3295.0], [87.4, 3303.0], [87.5, 3311.0], [87.6, 3321.0], [87.7, 3333.0], [87.8, 3344.0], [87.9, 3358.0], [88.0, 3368.0], [88.1, 3376.0], [88.2, 3390.0], [88.3, 3404.0], [88.4, 3420.0], [88.5, 3440.0], [88.6, 3463.0], [88.7, 3503.0], [88.8, 3527.0], [88.9, 3579.0], [89.0, 3654.0], [89.1, 3706.0], [89.2, 3775.0], [89.3, 3826.0], [89.4, 3860.0], [89.5, 3891.0], [89.6, 3909.0], [89.7, 3966.0], [89.8, 3999.0], [89.9, 4030.0], [90.0, 4051.0], [90.1, 4071.0], [90.2, 4091.0], [90.3, 4106.0], [90.4, 4119.0], [90.5, 4142.0], [90.6, 4152.0], [90.7, 4166.0], [90.8, 4181.0], [90.9, 4194.0], [91.0, 4207.0], [91.1, 4215.0], [91.2, 4230.0], [91.3, 4246.0], [91.4, 4257.0], [91.5, 4273.0], [91.6, 4296.0], [91.7, 4314.0], [91.8, 4329.0], [91.9, 4350.0], [92.0, 4386.0], [92.1, 4425.0], [92.2, 4455.0], [92.3, 4483.0], [92.4, 4525.0], [92.5, 4577.0], [92.6, 4610.0], [92.7, 4688.0], [92.8, 4753.0], [92.9, 4815.0], [93.0, 4869.0], [93.1, 4943.0], [93.2, 5022.0], [93.3, 5068.0], [93.4, 5133.0], [93.5, 5184.0], [93.6, 5266.0], [93.7, 5318.0], [93.8, 5380.0], [93.9, 5459.0], [94.0, 5583.0], [94.1, 5672.0], [94.2, 5798.0], [94.3, 5876.0], [94.4, 5965.0], [94.5, 6038.0], [94.6, 6248.0], [94.7, 6411.0], [94.8, 6620.0], [94.9, 6725.0], [95.0, 6837.0], [95.1, 6917.0], [95.2, 7034.0], [95.3, 7166.0], [95.4, 7245.0], [95.5, 7315.0], [95.6, 7358.0], [95.7, 7379.0], [95.8, 7395.0], [95.9, 7419.0], [96.0, 7435.0], [96.1, 7461.0], [96.2, 7487.0], [96.3, 7506.0], [96.4, 7534.0], [96.5, 7576.0], [96.6, 7602.0], [96.7, 7627.0], [96.8, 7653.0], [96.9, 7663.0], [97.0, 7689.0], [97.1, 7704.0], [97.2, 7744.0], [97.3, 7754.0], [97.4, 7782.0], [97.5, 7820.0], [97.6, 7854.0], [97.7, 7879.0], [97.8, 7901.0], [97.9, 7947.0], [98.0, 7976.0], [98.1, 8034.0], [98.2, 8096.0], [98.3, 8195.0], [98.4, 8260.0], [98.5, 8306.0], [98.6, 8368.0], [98.7, 8433.0], [98.8, 8477.0], [98.9, 8532.0], [99.0, 8575.0], [99.1, 8635.0], [99.2, 8682.0], [99.3, 8729.0], [99.4, 8769.0], [99.5, 8858.0], [99.6, 9503.0], [99.7, 10013.0], [99.8, 10207.0], [99.9, 10808.0]], "isOverall": false, "label": "stress test", "isController": false}, {"data": [[0.0, 254.0], [0.1, 256.0], [0.2, 257.0], [0.3, 261.0], [0.4, 270.0], [0.5, 272.0], [0.6, 273.0], [0.7, 275.0], [0.8, 276.0], [0.9, 276.0], [1.0, 277.0], [1.1, 279.0], [1.2, 279.0], [1.3, 280.0], [1.4, 281.0], [1.5, 282.0], [1.6, 282.0], [1.7, 283.0], [1.8, 283.0], [1.9, 284.0], [2.0, 291.0], [2.1, 293.0], [2.2, 294.0], [2.3, 294.0], [2.4, 295.0], [2.5, 299.0], [2.6, 301.0], [2.7, 304.0], [2.8, 305.0], [2.9, 306.0], [3.0, 307.0], [3.1, 310.0], [3.2, 312.0], [3.3, 317.0], [3.4, 319.0], [3.5, 325.0], [3.6, 336.0], [3.7, 355.0], [3.8, 356.0], [3.9, 363.0], [4.0, 365.0], [4.1, 367.0], [4.2, 373.0], [4.3, 375.0], [4.4, 378.0], [4.5, 394.0], [4.6, 396.0], [4.7, 398.0], [4.8, 400.0], [4.9, 404.0], [5.0, 404.0], [5.1, 406.0], [5.2, 411.0], [5.3, 412.0], [5.4, 414.0], [5.5, 415.0], [5.6, 419.0], [5.7, 427.0], [5.8, 432.0], [5.9, 434.0], [6.0, 435.0], [6.1, 440.0], [6.2, 442.0], [6.3, 442.0], [6.4, 444.0], [6.5, 444.0], [6.6, 445.0], [6.7, 448.0], [6.8, 455.0], [6.9, 455.0], [7.0, 457.0], [7.1, 467.0], [7.2, 467.0], [7.3, 467.0], [7.4, 468.0], [7.5, 468.0], [7.6, 470.0], [7.7, 471.0], [7.8, 473.0], [7.9, 473.0], [8.0, 477.0], [8.1, 479.0], [8.2, 479.0], [8.3, 481.0], [8.4, 485.0], [8.5, 488.0], [8.6, 489.0], [8.7, 496.0], [8.8, 497.0], [8.9, 497.0], [9.0, 498.0], [9.1, 500.0], [9.2, 501.0], [9.3, 501.0], [9.4, 507.0], [9.5, 508.0], [9.6, 508.0], [9.7, 511.0], [9.8, 511.0], [9.9, 512.0], [10.0, 512.0], [10.1, 514.0], [10.2, 516.0], [10.3, 518.0], [10.4, 520.0], [10.5, 525.0], [10.6, 527.0], [10.7, 529.0], [10.8, 530.0], [10.9, 531.0], [11.0, 533.0], [11.1, 538.0], [11.2, 541.0], [11.3, 542.0], [11.4, 543.0], [11.5, 544.0], [11.6, 547.0], [11.7, 548.0], [11.8, 553.0], [11.9, 553.0], [12.0, 553.0], [12.1, 558.0], [12.2, 558.0], [12.3, 559.0], [12.4, 564.0], [12.5, 567.0], [12.6, 568.0], [12.7, 569.0], [12.8, 570.0], [12.9, 572.0], [13.0, 573.0], [13.1, 578.0], [13.2, 580.0], [13.3, 581.0], [13.4, 586.0], [13.5, 586.0], [13.6, 586.0], [13.7, 587.0], [13.8, 590.0], [13.9, 590.0], [14.0, 590.0], [14.1, 591.0], [14.2, 592.0], [14.3, 593.0], [14.4, 595.0], [14.5, 595.0], [14.6, 595.0], [14.7, 596.0], [14.8, 597.0], [14.9, 599.0], [15.0, 599.0], [15.1, 602.0], [15.2, 603.0], [15.3, 604.0], [15.4, 610.0], [15.5, 610.0], [15.6, 616.0], [15.7, 616.0], [15.8, 617.0], [15.9, 617.0], [16.0, 618.0], [16.1, 618.0], [16.2, 620.0], [16.3, 621.0], [16.4, 623.0], [16.5, 623.0], [16.6, 624.0], [16.7, 626.0], [16.8, 629.0], [16.9, 629.0], [17.0, 630.0], [17.1, 632.0], [17.2, 633.0], [17.3, 635.0], [17.4, 636.0], [17.5, 637.0], [17.6, 637.0], [17.7, 638.0], [17.8, 643.0], [17.9, 645.0], [18.0, 647.0], [18.1, 650.0], [18.2, 651.0], [18.3, 652.0], [18.4, 656.0], [18.5, 657.0], [18.6, 658.0], [18.7, 661.0], [18.8, 663.0], [18.9, 665.0], [19.0, 666.0], [19.1, 673.0], [19.2, 673.0], [19.3, 673.0], [19.4, 681.0], [19.5, 682.0], [19.6, 683.0], [19.7, 685.0], [19.8, 686.0], [19.9, 686.0], [20.0, 689.0], [20.1, 692.0], [20.2, 694.0], [20.3, 694.0], [20.4, 695.0], [20.5, 697.0], [20.6, 697.0], [20.7, 697.0], [20.8, 699.0], [20.9, 699.0], [21.0, 700.0], [21.1, 701.0], [21.2, 702.0], [21.3, 702.0], [21.4, 703.0], [21.5, 705.0], [21.6, 705.0], [21.7, 705.0], [21.8, 706.0], [21.9, 706.0], [22.0, 707.0], [22.1, 708.0], [22.2, 709.0], [22.3, 709.0], [22.4, 710.0], [22.5, 712.0], [22.6, 713.0], [22.7, 715.0], [22.8, 716.0], [22.9, 717.0], [23.0, 717.0], [23.1, 722.0], [23.2, 723.0], [23.3, 723.0], [23.4, 724.0], [23.5, 726.0], [23.6, 728.0], [23.7, 731.0], [23.8, 735.0], [23.9, 736.0], [24.0, 737.0], [24.1, 739.0], [24.2, 741.0], [24.3, 744.0], [24.4, 745.0], [24.5, 746.0], [24.6, 747.0], [24.7, 748.0], [24.8, 751.0], [24.9, 751.0], [25.0, 755.0], [25.1, 755.0], [25.2, 756.0], [25.3, 757.0], [25.4, 762.0], [25.5, 763.0], [25.6, 764.0], [25.7, 764.0], [25.8, 767.0], [25.9, 767.0], [26.0, 769.0], [26.1, 770.0], [26.2, 772.0], [26.3, 772.0], [26.4, 774.0], [26.5, 778.0], [26.6, 779.0], [26.7, 783.0], [26.8, 792.0], [26.9, 793.0], [27.0, 794.0], [27.1, 795.0], [27.2, 797.0], [27.3, 798.0], [27.4, 801.0], [27.5, 802.0], [27.6, 803.0], [27.7, 803.0], [27.8, 805.0], [27.9, 805.0], [28.0, 807.0], [28.1, 807.0], [28.2, 807.0], [28.3, 807.0], [28.4, 807.0], [28.5, 810.0], [28.6, 811.0], [28.7, 811.0], [28.8, 812.0], [28.9, 812.0], [29.0, 813.0], [29.1, 817.0], [29.2, 819.0], [29.3, 821.0], [29.4, 821.0], [29.5, 822.0], [29.6, 822.0], [29.7, 822.0], [29.8, 825.0], [29.9, 825.0], [30.0, 826.0], [30.1, 828.0], [30.2, 829.0], [30.3, 829.0], [30.4, 830.0], [30.5, 830.0], [30.6, 831.0], [30.7, 833.0], [30.8, 837.0], [30.9, 838.0], [31.0, 838.0], [31.1, 840.0], [31.2, 842.0], [31.3, 844.0], [31.4, 844.0], [31.5, 845.0], [31.6, 846.0], [31.7, 846.0], [31.8, 847.0], [31.9, 848.0], [32.0, 851.0], [32.1, 852.0], [32.2, 855.0], [32.3, 858.0], [32.4, 859.0], [32.5, 860.0], [32.6, 865.0], [32.7, 867.0], [32.8, 870.0], [32.9, 872.0], [33.0, 873.0], [33.1, 873.0], [33.2, 874.0], [33.3, 879.0], [33.4, 879.0], [33.5, 881.0], [33.6, 881.0], [33.7, 883.0], [33.8, 884.0], [33.9, 885.0], [34.0, 888.0], [34.1, 889.0], [34.2, 891.0], [34.3, 891.0], [34.4, 895.0], [34.5, 895.0], [34.6, 896.0], [34.7, 896.0], [34.8, 899.0], [34.9, 900.0], [35.0, 902.0], [35.1, 906.0], [35.2, 907.0], [35.3, 917.0], [35.4, 917.0], [35.5, 918.0], [35.6, 919.0], [35.7, 921.0], [35.8, 924.0], [35.9, 924.0], [36.0, 927.0], [36.1, 930.0], [36.2, 933.0], [36.3, 933.0], [36.4, 934.0], [36.5, 938.0], [36.6, 940.0], [36.7, 941.0], [36.8, 947.0], [36.9, 948.0], [37.0, 948.0], [37.1, 957.0], [37.2, 962.0], [37.3, 964.0], [37.4, 966.0], [37.5, 979.0], [37.6, 979.0], [37.7, 979.0], [37.8, 985.0], [37.9, 990.0], [38.0, 991.0], [38.1, 992.0], [38.2, 995.0], [38.3, 1000.0], [38.4, 1000.0], [38.5, 1002.0], [38.6, 1005.0], [38.7, 1007.0], [38.8, 1010.0], [38.9, 1011.0], [39.0, 1012.0], [39.1, 1013.0], [39.2, 1014.0], [39.3, 1017.0], [39.4, 1017.0], [39.5, 1020.0], [39.6, 1021.0], [39.7, 1023.0], [39.8, 1029.0], [39.9, 1029.0], [40.0, 1033.0], [40.1, 1033.0], [40.2, 1039.0], [40.3, 1044.0], [40.4, 1049.0], [40.5, 1059.0], [40.6, 1065.0], [40.7, 1065.0], [40.8, 1067.0], [40.9, 1078.0], [41.0, 1078.0], [41.1, 1078.0], [41.2, 1080.0], [41.3, 1083.0], [41.4, 1085.0], [41.5, 1088.0], [41.6, 1089.0], [41.7, 1094.0], [41.8, 1095.0], [41.9, 1096.0], [42.0, 1100.0], [42.1, 1101.0], [42.2, 1103.0], [42.3, 1104.0], [42.4, 1108.0], [42.5, 1109.0], [42.6, 1111.0], [42.7, 1111.0], [42.8, 1112.0], [42.9, 1126.0], [43.0, 1132.0], [43.1, 1133.0], [43.2, 1144.0], [43.3, 1146.0], [43.4, 1148.0], [43.5, 1152.0], [43.6, 1160.0], [43.7, 1161.0], [43.8, 1162.0], [43.9, 1169.0], [44.0, 1170.0], [44.1, 1180.0], [44.2, 1191.0], [44.3, 1192.0], [44.4, 1196.0], [44.5, 1205.0], [44.6, 1206.0], [44.7, 1207.0], [44.8, 1212.0], [44.9, 1215.0], [45.0, 1225.0], [45.1, 1229.0], [45.2, 1241.0], [45.3, 1245.0], [45.4, 1245.0], [45.5, 1247.0], [45.6, 1247.0], [45.7, 1250.0], [45.8, 1251.0], [45.9, 1254.0], [46.0, 1267.0], [46.1, 1268.0], [46.2, 1276.0], [46.3, 1281.0], [46.4, 1284.0], [46.5, 1296.0], [46.6, 1300.0], [46.7, 1307.0], [46.8, 1309.0], [46.9, 1311.0], [47.0, 1315.0], [47.1, 1325.0], [47.2, 1330.0], [47.3, 1337.0], [47.4, 1341.0], [47.5, 1349.0], [47.6, 1356.0], [47.7, 1357.0], [47.8, 1357.0], [47.9, 1369.0], [48.0, 1371.0], [48.1, 1380.0], [48.2, 1383.0], [48.3, 1383.0], [48.4, 1384.0], [48.5, 1397.0], [48.6, 1398.0], [48.7, 1409.0], [48.8, 1415.0], [48.9, 1432.0], [49.0, 1433.0], [49.1, 1439.0], [49.2, 1457.0], [49.3, 1459.0], [49.4, 1460.0], [49.5, 1467.0], [49.6, 1468.0], [49.7, 1469.0], [49.8, 1469.0], [49.9, 1471.0], [50.0, 1475.0], [50.1, 1481.0], [50.2, 1497.0], [50.3, 1504.0], [50.4, 1507.0], [50.5, 1522.0], [50.6, 1539.0], [50.7, 1547.0], [50.8, 1547.0], [50.9, 1548.0], [51.0, 1548.0], [51.1, 1549.0], [51.2, 1559.0], [51.3, 1569.0], [51.4, 1569.0], [51.5, 1570.0], [51.6, 1573.0], [51.7, 1578.0], [51.8, 1578.0], [51.9, 1609.0], [52.0, 1611.0], [52.1, 1612.0], [52.2, 1634.0], [52.3, 1642.0], [52.4, 1644.0], [52.5, 1645.0], [52.6, 1658.0], [52.7, 1659.0], [52.8, 1669.0], [52.9, 1677.0], [53.0, 1678.0], [53.1, 1691.0], [53.2, 1710.0], [53.3, 1715.0], [53.4, 1719.0], [53.5, 1726.0], [53.6, 1728.0], [53.7, 1739.0], [53.8, 1745.0], [53.9, 1748.0], [54.0, 1751.0], [54.1, 1769.0], [54.2, 1782.0], [54.3, 1789.0], [54.4, 1791.0], [54.5, 1809.0], [54.6, 1811.0], [54.7, 1813.0], [54.8, 1815.0], [54.9, 1836.0], [55.0, 1841.0], [55.1, 1866.0], [55.2, 1871.0], [55.3, 1872.0], [55.4, 1882.0], [55.5, 1899.0], [55.6, 1906.0], [55.7, 1913.0], [55.8, 1928.0], [55.9, 1974.0], [56.0, 1987.0], [56.1, 2002.0], [56.2, 2019.0], [56.3, 2062.0], [56.4, 2078.0], [56.5, 2081.0], [56.6, 2093.0], [56.7, 2101.0], [56.8, 2108.0], [56.9, 2121.0], [57.0, 2134.0], [57.1, 2138.0], [57.2, 2157.0], [57.3, 2158.0], [57.4, 2159.0], [57.5, 2162.0], [57.6, 2185.0], [57.7, 2185.0], [57.8, 2198.0], [57.9, 2207.0], [58.0, 2228.0], [58.1, 2245.0], [58.2, 2257.0], [58.3, 2261.0], [58.4, 2263.0], [58.5, 2270.0], [58.6, 2291.0], [58.7, 2293.0], [58.8, 2299.0], [58.9, 2310.0], [59.0, 2315.0], [59.1, 2322.0], [59.2, 2337.0], [59.3, 2370.0], [59.4, 2373.0], [59.5, 2375.0], [59.6, 2383.0], [59.7, 2399.0], [59.8, 2404.0], [59.9, 2414.0], [60.0, 2430.0], [60.1, 2430.0], [60.2, 2434.0], [60.3, 2459.0], [60.4, 2459.0], [60.5, 2460.0], [60.6, 2468.0], [60.7, 2474.0], [60.8, 2494.0], [60.9, 2507.0], [61.0, 2508.0], [61.1, 2517.0], [61.2, 2518.0], [61.3, 2530.0], [61.4, 2535.0], [61.5, 2539.0], [61.6, 2549.0], [61.7, 2553.0], [61.8, 2570.0], [61.9, 2588.0], [62.0, 2594.0], [62.1, 2604.0], [62.2, 2620.0], [62.3, 2624.0], [62.4, 2628.0], [62.5, 2628.0], [62.6, 2665.0], [62.7, 2677.0], [62.8, 2693.0], [62.9, 2738.0], [63.0, 2753.0], [63.1, 2757.0], [63.2, 2769.0], [63.3, 2813.0], [63.4, 2817.0], [63.5, 2819.0], [63.6, 2834.0], [63.7, 2837.0], [63.8, 2861.0], [63.9, 2869.0], [64.0, 2872.0], [64.1, 2891.0], [64.2, 2891.0], [64.3, 2898.0], [64.4, 2902.0], [64.5, 2910.0], [64.6, 2935.0], [64.7, 2938.0], [64.8, 2940.0], [64.9, 2955.0], [65.0, 2982.0], [65.1, 2993.0], [65.2, 2994.0], [65.3, 3035.0], [65.4, 3055.0], [65.5, 3073.0], [65.6, 3090.0], [65.7, 3091.0], [65.8, 3095.0], [65.9, 3096.0], [66.0, 3104.0], [66.1, 3107.0], [66.2, 3112.0], [66.3, 3122.0], [66.4, 3123.0], [66.5, 3155.0], [66.6, 3190.0], [66.7, 3195.0], [66.8, 3196.0], [66.9, 3212.0], [67.0, 3213.0], [67.1, 3227.0], [67.2, 3230.0], [67.3, 3246.0], [67.4, 3260.0], [67.5, 3269.0], [67.6, 3297.0], [67.7, 3300.0], [67.8, 3304.0], [67.9, 3313.0], [68.0, 3314.0], [68.1, 3315.0], [68.2, 3321.0], [68.3, 3334.0], [68.4, 3339.0], [68.5, 3341.0], [68.6, 3351.0], [68.7, 3354.0], [68.8, 3361.0], [68.9, 3372.0], [69.0, 3385.0], [69.1, 3397.0], [69.2, 3398.0], [69.3, 3424.0], [69.4, 3424.0], [69.5, 3426.0], [69.6, 3437.0], [69.7, 3438.0], [69.8, 3438.0], [69.9, 3446.0], [70.0, 3451.0], [70.1, 3455.0], [70.2, 3456.0], [70.3, 3467.0], [70.4, 3473.0], [70.5, 3475.0], [70.6, 3485.0], [70.7, 3485.0], [70.8, 3487.0], [70.9, 3491.0], [71.0, 3495.0], [71.1, 3498.0], [71.2, 3499.0], [71.3, 3519.0], [71.4, 3529.0], [71.5, 3530.0], [71.6, 3534.0], [71.7, 3537.0], [71.8, 3537.0], [71.9, 3538.0], [72.0, 3566.0], [72.1, 3575.0], [72.2, 3577.0], [72.3, 3586.0], [72.4, 3602.0], [72.5, 3612.0], [72.6, 3622.0], [72.7, 3623.0], [72.8, 3630.0], [72.9, 3631.0], [73.0, 3643.0], [73.1, 3645.0], [73.2, 3648.0], [73.3, 3657.0], [73.4, 3660.0], [73.5, 3664.0], [73.6, 3680.0], [73.7, 3685.0], [73.8, 3687.0], [73.9, 3687.0], [74.0, 3699.0], [74.1, 3703.0], [74.2, 3705.0], [74.3, 3722.0], [74.4, 3727.0], [74.5, 3741.0], [74.6, 3751.0], [74.7, 3752.0], [74.8, 3759.0], [74.9, 3761.0], [75.0, 3770.0], [75.1, 3790.0], [75.2, 3794.0], [75.3, 3813.0], [75.4, 3856.0], [75.5, 3864.0], [75.6, 3866.0], [75.7, 3867.0], [75.8, 3871.0], [75.9, 3887.0], [76.0, 3892.0], [76.1, 3896.0], [76.2, 3902.0], [76.3, 3909.0], [76.4, 3912.0], [76.5, 3915.0], [76.6, 3925.0], [76.7, 3927.0], [76.8, 3928.0], [76.9, 3935.0], [77.0, 3942.0], [77.1, 3952.0], [77.2, 3967.0], [77.3, 3984.0], [77.4, 3985.0], [77.5, 3988.0], [77.6, 3999.0], [77.7, 4006.0], [77.8, 4012.0], [77.9, 4021.0], [78.0, 4050.0], [78.1, 4054.0], [78.2, 4063.0], [78.3, 4074.0], [78.4, 4080.0], [78.5, 4098.0], [78.6, 4101.0], [78.7, 4116.0], [78.8, 4118.0], [78.9, 4121.0], [79.0, 4127.0], [79.1, 4131.0], [79.2, 4140.0], [79.3, 4148.0], [79.4, 4157.0], [79.5, 4158.0], [79.6, 4168.0], [79.7, 4193.0], [79.8, 4197.0], [79.9, 4256.0], [80.0, 4274.0], [80.1, 4283.0], [80.2, 4289.0], [80.3, 4296.0], [80.4, 4317.0], [80.5, 4326.0], [80.6, 4326.0], [80.7, 4345.0], [80.8, 4348.0], [80.9, 4357.0], [81.0, 4364.0], [81.1, 4368.0], [81.2, 4370.0], [81.3, 4377.0], [81.4, 4378.0], [81.5, 4380.0], [81.6, 4393.0], [81.7, 4408.0], [81.8, 4413.0], [81.9, 4423.0], [82.0, 4430.0], [82.1, 4432.0], [82.2, 4436.0], [82.3, 4447.0], [82.4, 4456.0], [82.5, 4462.0], [82.6, 4464.0], [82.7, 4474.0], [82.8, 4483.0], [82.9, 4484.0], [83.0, 4496.0], [83.1, 4499.0], [83.2, 4516.0], [83.3, 4525.0], [83.4, 4529.0], [83.5, 4532.0], [83.6, 4538.0], [83.7, 4542.0], [83.8, 4546.0], [83.9, 4547.0], [84.0, 4550.0], [84.1, 4556.0], [84.2, 4561.0], [84.3, 4580.0], [84.4, 4592.0], [84.5, 4599.0], [84.6, 4599.0], [84.7, 4610.0], [84.8, 4613.0], [84.9, 4615.0], [85.0, 4622.0], [85.1, 4627.0], [85.2, 4636.0], [85.3, 4643.0], [85.4, 4647.0], [85.5, 4648.0], [85.6, 4648.0], [85.7, 4657.0], [85.8, 4665.0], [85.9, 4670.0], [86.0, 4694.0], [86.1, 4706.0], [86.2, 4713.0], [86.3, 4719.0], [86.4, 4727.0], [86.5, 4732.0], [86.6, 4736.0], [86.7, 4755.0], [86.8, 4760.0], [86.9, 4778.0], [87.0, 4811.0], [87.1, 4819.0], [87.2, 4822.0], [87.3, 4824.0], [87.4, 4828.0], [87.5, 4830.0], [87.6, 4844.0], [87.7, 4879.0], [87.8, 4882.0], [87.9, 4887.0], [88.0, 4895.0], [88.1, 4897.0], [88.2, 4919.0], [88.3, 4930.0], [88.4, 4931.0], [88.5, 4934.0], [88.6, 4950.0], [88.7, 4952.0], [88.8, 4953.0], [88.9, 4953.0], [89.0, 4965.0], [89.1, 4968.0], [89.2, 4970.0], [89.3, 4990.0], [89.4, 4993.0], [89.5, 4996.0], [89.6, 5001.0], [89.7, 5008.0], [89.8, 5022.0], [89.9, 5023.0], [90.0, 5041.0], [90.1, 5041.0], [90.2, 5051.0], [90.3, 5070.0], [90.4, 5076.0], [90.5, 5078.0], [90.6, 5085.0], [90.7, 5093.0], [90.8, 5103.0], [90.9, 5108.0], [91.0, 5109.0], [91.1, 5112.0], [91.2, 5119.0], [91.3, 5121.0], [91.4, 5132.0], [91.5, 5134.0], [91.6, 5141.0], [91.7, 5150.0], [91.8, 5159.0], [91.9, 5185.0], [92.0, 5199.0], [92.1, 5210.0], [92.2, 5213.0], [92.3, 5215.0], [92.4, 5257.0], [92.5, 5277.0], [92.6, 5300.0], [92.7, 5306.0], [92.8, 5317.0], [92.9, 5331.0], [93.0, 5355.0], [93.1, 5357.0], [93.2, 5366.0], [93.3, 5383.0], [93.4, 5389.0], [93.5, 5406.0], [93.6, 5413.0], [93.7, 5424.0], [93.8, 5431.0], [93.9, 5435.0], [94.0, 5451.0], [94.1, 5459.0], [94.2, 5474.0], [94.3, 5475.0], [94.4, 5477.0], [94.5, 5481.0], [94.6, 5493.0], [94.7, 5518.0], [94.8, 5528.0], [94.9, 5552.0], [95.0, 5583.0], [95.1, 5599.0], [95.2, 5604.0], [95.3, 5618.0], [95.4, 5637.0], [95.5, 5643.0], [95.6, 5646.0], [95.7, 5662.0], [95.8, 5666.0], [95.9, 5670.0], [96.0, 5702.0], [96.1, 5710.0], [96.2, 5749.0], [96.3, 5751.0], [96.4, 5792.0], [96.5, 5810.0], [96.6, 5810.0], [96.7, 5879.0], [96.8, 5885.0], [96.9, 5888.0], [97.0, 5929.0], [97.1, 5934.0], [97.2, 5937.0], [97.3, 5939.0], [97.4, 5967.0], [97.5, 5970.0], [97.6, 5972.0], [97.7, 5999.0], [97.8, 6040.0], [97.9, 6059.0], [98.0, 6072.0], [98.1, 6076.0], [98.2, 6087.0], [98.3, 6088.0], [98.4, 6108.0], [98.5, 6117.0], [98.6, 6131.0], [98.7, 6208.0], [98.8, 6211.0], [98.9, 6375.0], [99.0, 6438.0], [99.1, 6470.0], [99.2, 6560.0], [99.3, 6567.0], [99.4, 6705.0], [99.5, 6730.0], [99.6, 6747.0], [99.7, 6879.0], [99.8, 6923.0], [99.9, 6957.0], [100.0, 7252.0]], "isOverall": false, "label": "spike test", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2052.0, "series": [{"data": [[600.0, 182.0], [700.0, 203.0], [800.0, 171.0], [900.0, 170.0], [1000.0, 208.0], [1100.0, 199.0], [1200.0, 204.0], [1300.0, 131.0], [1400.0, 90.0], [1500.0, 74.0], [1600.0, 68.0], [1700.0, 65.0], [1800.0, 58.0], [1900.0, 67.0], [2000.0, 64.0], [2100.0, 67.0], [2200.0, 37.0], [2300.0, 29.0], [2400.0, 24.0], [2500.0, 15.0], [2600.0, 6.0], [2800.0, 6.0], [2700.0, 3.0], [2900.0, 8.0], [3000.0, 4.0], [3100.0, 7.0], [3300.0, 5.0], [3200.0, 1.0], [3400.0, 5.0], [3500.0, 4.0], [3700.0, 3.0], [3600.0, 4.0], [3800.0, 7.0], [3900.0, 11.0], [4000.0, 6.0], [4200.0, 5.0], [4100.0, 11.0], [4300.0, 8.0], [4500.0, 3.0], [4600.0, 3.0], [4400.0, 9.0], [4800.0, 3.0], [4700.0, 2.0], [5000.0, 2.0], [5100.0, 5.0], [4900.0, 4.0], [5300.0, 4.0], [5200.0, 4.0], [5600.0, 4.0], [5500.0, 2.0], [5800.0, 1.0], [5700.0, 2.0], [5900.0, 1.0], [6000.0, 3.0], [6100.0, 2.0], [6300.0, 2.0], [6200.0, 2.0], [6500.0, 2.0], [200.0, 721.0], [300.0, 708.0], [400.0, 307.0], [500.0, 191.0]], "isOverall": false, "label": "Load test", "isController": false}, {"data": [[0.0, 259.0], [100.0, 69.0], [200.0, 1460.0], [300.0, 2052.0], [400.0, 900.0], [500.0, 442.0], [600.0, 351.0], [700.0, 352.0], [800.0, 415.0], [900.0, 401.0], [1000.0, 429.0], [1100.0, 403.0], [1200.0, 329.0], [1300.0, 298.0], [1400.0, 309.0], [1500.0, 283.0], [1600.0, 259.0], [1700.0, 275.0], [1800.0, 293.0], [1900.0, 296.0], [2000.0, 256.0], [2100.0, 236.0], [2300.0, 91.0], [2200.0, 139.0], [2400.0, 88.0], [2500.0, 82.0], [2600.0, 57.0], [2700.0, 57.0], [2800.0, 72.0], [2900.0, 80.0], [3000.0, 96.0], [3100.0, 107.0], [3200.0, 111.0], [3300.0, 116.0], [3400.0, 56.0], [3500.0, 31.0], [3600.0, 22.0], [3700.0, 17.0], [3800.0, 43.0], [3900.0, 32.0], [4000.0, 57.0], [4100.0, 94.0], [4300.0, 50.0], [4200.0, 86.0], [4400.0, 45.0], [4600.0, 21.0], [4500.0, 25.0], [4700.0, 20.0], [4800.0, 21.0], [4900.0, 19.0], [5000.0, 21.0], [5100.0, 22.0], [5300.0, 19.0], [5200.0, 21.0], [5600.0, 15.0], [5400.0, 16.0], [5500.0, 8.0], [5700.0, 11.0], [5800.0, 17.0], [5900.0, 14.0], [6000.0, 13.0], [6100.0, 4.0], [6300.0, 9.0], [6200.0, 7.0], [6400.0, 7.0], [6600.0, 12.0], [6500.0, 4.0], [6700.0, 10.0], [6800.0, 18.0], [6900.0, 11.0], [7100.0, 14.0], [7000.0, 12.0], [7300.0, 43.0], [7200.0, 15.0], [7400.0, 60.0], [7600.0, 60.0], [7500.0, 41.0], [7900.0, 35.0], [7700.0, 49.0], [7800.0, 47.0], [8100.0, 13.0], [8000.0, 19.0], [8300.0, 24.0], [8200.0, 23.0], [8400.0, 23.0], [8500.0, 27.0], [8600.0, 27.0], [8700.0, 22.0], [8900.0, 4.0], [8800.0, 11.0], [9200.0, 1.0], [9500.0, 2.0], [9300.0, 4.0], [9700.0, 2.0], [9600.0, 1.0], [9400.0, 1.0], [9900.0, 3.0], [10100.0, 9.0], [10200.0, 1.0], [9800.0, 5.0], [10000.0, 4.0], [10500.0, 3.0], [10400.0, 3.0], [10300.0, 3.0], [10700.0, 2.0], [10800.0, 3.0], [11200.0, 2.0], [11400.0, 2.0], [11700.0, 3.0], [11300.0, 2.0], [11500.0, 1.0], [11800.0, 1.0]], "isOverall": false, "label": "stress test", "isController": false}, {"data": [[600.0, 77.0], [700.0, 83.0], [800.0, 98.0], [900.0, 44.0], [1000.0, 48.0], [1100.0, 32.0], [1200.0, 28.0], [1300.0, 27.0], [1400.0, 21.0], [1500.0, 20.0], [1600.0, 17.0], [1700.0, 17.0], [1800.0, 14.0], [1900.0, 7.0], [2000.0, 8.0], [2100.0, 15.0], [2300.0, 12.0], [2200.0, 13.0], [2400.0, 14.0], [2500.0, 16.0], [2600.0, 10.0], [2800.0, 14.0], [2700.0, 6.0], [2900.0, 11.0], [3000.0, 10.0], [3100.0, 11.0], [3200.0, 11.0], [3300.0, 20.0], [3400.0, 27.0], [3500.0, 14.0], [3600.0, 22.0], [3700.0, 15.0], [3800.0, 12.0], [3900.0, 20.0], [4000.0, 11.0], [4100.0, 17.0], [4200.0, 7.0], [4300.0, 16.0], [4400.0, 20.0], [4500.0, 19.0], [4600.0, 19.0], [4800.0, 15.0], [4700.0, 12.0], [5000.0, 16.0], [4900.0, 18.0], [5100.0, 17.0], [5200.0, 6.0], [5300.0, 12.0], [5400.0, 16.0], [5500.0, 6.0], [5600.0, 11.0], [5700.0, 6.0], [5800.0, 6.0], [5900.0, 11.0], [6100.0, 5.0], [6000.0, 7.0], [6200.0, 2.0], [6300.0, 1.0], [6400.0, 3.0], [6500.0, 2.0], [6600.0, 1.0], [6700.0, 3.0], [6800.0, 2.0], [6900.0, 2.0], [7200.0, 1.0], [200.0, 33.0], [300.0, 29.0], [400.0, 56.0], [500.0, 77.0]], "isOverall": false, "label": "spike test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 362.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6250.0, "series": [{"data": [[0.0, 6250.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 6003.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5889.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 362.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 55.23357664233578, "minX": 1.62921336E12, "maxY": 384.8866603743908, "series": [{"data": [[1.62921342E12, 368.65204003079293]], "isOverall": false, "label": "jp@gc - spike", "isController": false}, {"data": [[1.62921342E12, 55.23357664233578], [1.62921348E12, 384.8866603743908]], "isOverall": false, "label": "jp@gc - stress", "isController": false}, {"data": [[1.62921342E12, 73.36955457660304], [1.62921336E12, 77.80404783808652]], "isOverall": false, "label": "jp@gc - load", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62921348E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 100.00000000000001, "minX": 1.0, "maxY": 7252.0, "series": [{"data": [[2.0, 266.0], [3.0, 279.5], [4.0, 388.25], [5.0, 394.25], [6.0, 289.8461538461538], [7.0, 302.5], [8.0, 382.5], [9.0, 355.8999999999999], [10.0, 303.7142857142858], [11.0, 446.79999999999995], [12.0, 400.4166666666667], [13.0, 511.25], [14.0, 505.4], [15.0, 437.3076923076923], [16.0, 389.5], [17.0, 418.6666666666667], [18.0, 416.68965517241384], [19.0, 507.38461538461536], [20.0, 489.5882352941176], [21.0, 401.81818181818176], [22.0, 834.375], [23.0, 531.6774193548385], [24.0, 370.85714285714283], [25.0, 429.83333333333326], [26.0, 611.7142857142856], [27.0, 443.0], [28.0, 569.0833333333334], [29.0, 640.7142857142858], [30.0, 527.5294117647059], [31.0, 577.9756097560975], [32.0, 444.6875], [33.0, 503.5], [34.0, 560.4], [35.0, 461.95], [36.0, 495.8636363636363], [37.0, 729.1666666666666], [38.0, 574.4705882352941], [39.0, 713.1818181818182], [40.0, 570.590909090909], [41.0, 595.1999999999999], [42.0, 660.8387096774193], [43.0, 605.3333333333335], [44.0, 562.9523809523808], [45.0, 689.2380952380953], [46.0, 691.2727272727273], [47.0, 952.8823529411765], [48.0, 542.1304347826087], [49.0, 750.7575757575758], [50.0, 862.4374999999998], [51.0, 607.2499999999999], [52.0, 827.6875], [53.0, 818.03125], [54.0, 765.9333333333333], [55.0, 727.6458333333333], [56.0, 851.304347826087], [57.0, 784.5833333333333], [58.0, 987.6470588235294], [59.0, 793.9565217391305], [60.0, 935.9411764705883], [61.0, 952.6231884057975], [62.0, 786.9999999999999], [63.0, 751.3333333333333], [64.0, 860.53125], [65.0, 1127.4545454545455], [66.0, 726.1724137931033], [67.0, 604.6666666666666], [68.0, 794.9047619047618], [69.0, 872.4929577464789], [70.0, 779.7647058823528], [71.0, 802.8387096774194], [72.0, 773.9666666666666], [73.0, 859.774193548387], [74.0, 793.125], [75.0, 897.025], [76.0, 1148.5], [77.0, 838.3260869565215], [78.0, 779.5106382978723], [79.0, 1049.2272727272727], [80.0, 951.1153846153846], [81.0, 847.6964285714286], [82.0, 946.125], [83.0, 770.3235294117649], [84.0, 982.4666666666668], [85.0, 1103.411764705882], [86.0, 978.9333333333334], [87.0, 1330.0], [88.0, 1093.2340425531918], [89.0, 930.6285714285714], [90.0, 1008.1590909090905], [91.0, 924.8936170212764], [92.0, 952.5454545454548], [93.0, 1573.3529411764707], [94.0, 1567.9], [95.0, 2085.3529411764707], [96.0, 1522.3529411764703], [97.0, 1498.7049180327867], [98.0, 1053.9589041095892], [99.0, 995.4047619047618], [100.0, 1193.8846625766878], [1.0, 270.0]], "isOverall": false, "label": "Load test", "isController": false}, {"data": [[75.65567939293352, 962.2115247806473]], "isOverall": false, "label": "Load test-Aggregated", "isController": false}, {"data": [[2.0, 6421.0], [3.0, 6411.0], [4.0, 6388.0], [5.0, 6646.0], [6.0, 6974.0], [7.0, 6888.0], [8.0, 3552.0], [9.0, 3535.5], [10.0, 3484.5], [11.0, 3576.5], [12.0, 6696.0], [13.0, 3676.0], [14.0, 3684.5], [15.0, 2023.5], [16.0, 2663.0], [17.0, 307.0], [18.0, 412.5], [19.0, 307.25], [20.0, 3887.0], [21.0, 266.16666666666663], [22.0, 272.0], [23.0, 2148.25], [24.0, 2139.75], [25.0, 2167.5], [26.0, 280.0], [27.0, 310.0], [28.0, 1404.142857142857], [29.0, 319.0], [30.0, 308.0], [31.0, 383.6666666666667], [32.0, 2120.75], [33.0, 2205.25], [34.0, 409.75], [35.0, 459.0], [36.0, 353.25], [37.0, 1583.6666666666665], [38.0, 372.25], [39.0, 346.6666666666667], [40.0, 308.75], [41.0, 363.0], [42.0, 875.0714285714287], [43.0, 298.6666666666667], [44.0, 2908.3333333333335], [45.0, 2256.5], [46.0, 981.75], [47.0, 389.5], [48.0, 163.0], [49.0, 404.0], [50.0, 403.2], [51.0, 580.3636363636366], [52.0, 221.5], [53.0, 295.5], [54.0, 1084.3], [55.0, 338.5], [56.0, 375.42857142857144], [57.0, 310.2857142857143], [58.0, 348.6666666666667], [59.0, 328.0], [60.0, 278.75], [61.0, 2036.8], [62.0, 354.0769230769231], [63.0, 763.0], [64.0, 389.75], [65.0, 579.375], [66.0, 496.625], [67.0, 587.25], [68.0, 1627.2857142857142], [69.0, 341.8], [70.0, 675.1666666666666], [71.0, 3272.3333333333335], [72.0, 557.6363636363637], [73.0, 326.11764705882354], [74.0, 448.81818181818187], [75.0, 659.0], [76.0, 2524.5], [77.0, 1102.7142857142858], [78.0, 3036.25], [79.0, 2026.5], [80.0, 387.5238095238095], [81.0, 264.99999999999994], [82.0, 414.0], [83.0, 266.2857142857143], [84.0, 695.0], [85.0, 756.1999999999998], [87.0, 252.23999999999995], [86.0, 115.5], [88.0, 100.00000000000001], [89.0, 704.0], [90.0, 1104.0], [91.0, 177.75], [92.0, 785.6], [93.0, 480.4], [94.0, 422.85714285714295], [95.0, 761.2500000000001], [96.0, 121.4761904761905], [97.0, 930.0714285714286], [98.0, 359.7272727272727], [99.0, 1232.2], [100.0, 809.0], [101.0, 2652.25], [102.0, 687.0], [103.0, 569.1428571428571], [104.0, 516.0], [105.0, 605.5], [106.0, 1851.875], [107.0, 1976.25], [108.0, 2344.25], [110.0, 450.67741935483866], [111.0, 880.2857142857142], [109.0, 2424.0], [112.0, 569.0666666666666], [113.0, 205.11111111111111], [114.0, 1161.142857142857], [115.0, 751.7045454545456], [116.0, 365.57142857142856], [117.0, 445.2692307692307], [118.0, 669.814814814815], [119.0, 705.21875], [120.0, 742.6666666666666], [121.0, 340.2857142857143], [122.0, 516.4444444444445], [123.0, 919.5000000000001], [124.0, 710.9230769230769], [125.0, 1229.1538461538462], [126.0, 395.81818181818176], [127.0, 966.7999999999998], [128.0, 749.5], [129.0, 1738.3333333333335], [130.0, 1253.333333333333], [131.0, 360.55555555555554], [132.0, 487.1111111111112], [133.0, 326.4], [134.0, 691.8], [135.0, 1046.235294117647], [136.0, 604.5454545454545], [137.0, 925.4705882352941], [138.0, 798.3478260869565], [139.0, 1035.3], [140.0, 619.4444444444445], [141.0, 1296.7777777777778], [142.0, 533.1818181818181], [143.0, 997.7894736842105], [144.0, 361.75], [145.0, 987.6111111111111], [146.0, 1512.3999999999999], [147.0, 443.8], [148.0, 395.5], [149.0, 2714.4285714285716], [150.0, 1697.875], [151.0, 1463.857142857143], [152.0, 1434.3684210526317], [153.0, 1154.5], [154.0, 795.6666666666666], [155.0, 1107.2], [156.0, 351.0], [157.0, 1950.357142857143], [158.0, 527.0], [159.0, 520.0], [160.0, 741.5], [161.0, 1311.5], [162.0, 1218.7], [163.0, 620.6], [164.0, 888.0526315789475], [165.0, 428.9090909090909], [166.0, 855.1249999999999], [167.0, 991.9166666666666], [168.0, 1635.5], [169.0, 750.090909090909], [170.0, 484.9230769230769], [171.0, 1713.0], [172.0, 764.5333333333333], [173.0, 602.3999999999999], [174.0, 972.4999999999999], [175.0, 863.8181818181819], [176.0, 1898.142857142857], [177.0, 712.4285714285714], [178.0, 892.1372549019608], [179.0, 548.5], [180.0, 1159.888888888889], [181.0, 546.2307692307693], [182.0, 856.3750000000001], [183.0, 788.1071428571429], [184.0, 1487.8484848484848], [185.0, 1621.6153846153848], [186.0, 601.0], [187.0, 1020.6874999999999], [188.0, 898.1666666666666], [189.0, 1099.75], [190.0, 1095.5714285714284], [191.0, 1070.4], [192.0, 855.4375], [193.0, 1185.9545454545455], [194.0, 2051.5], [195.0, 745.9285714285714], [196.0, 604.4285714285714], [197.0, 1428.727272727273], [198.0, 2563.1666666666665], [199.0, 984.2916666666667], [200.0, 1056.8400000000001], [201.0, 473.6], [202.0, 1112.3170731707316], [203.0, 1745.375], [204.0, 750.8571428571428], [205.0, 1674.111111111111], [206.0, 706.0], [207.0, 1864.9130434782612], [208.0, 1351.3076923076924], [209.0, 548.75], [210.0, 1226.3055555555557], [211.0, 1855.0], [212.0, 1645.470588235294], [213.0, 833.9999999999999], [214.0, 1268.0], [215.0, 1944.3333333333335], [216.0, 1219.6], [217.0, 1182.7647058823527], [218.0, 492.66666666666663], [219.0, 552.1428571428571], [220.0, 958.4666666666666], [221.0, 1374.8000000000002], [222.0, 1354.8333333333333], [223.0, 496.90000000000003], [224.0, 528.2941176470588], [225.0, 1456.6923076923076], [226.0, 1780.625], [227.0, 1086.75], [228.0, 854.8461538461538], [229.0, 1573.625], [230.0, 1711.25], [231.0, 1497.0625], [232.0, 959.5238095238096], [233.0, 1225.428571428571], [234.0, 1775.7777777777778], [235.0, 1086.7222222222222], [236.0, 1255.3181818181815], [237.0, 937.8666666666668], [238.0, 1168.8275862068967], [239.0, 906.4705882352941], [240.0, 1461.4444444444446], [241.0, 879.1764705882352], [242.0, 1410.8888888888891], [243.0, 1010.5238095238095], [244.0, 1616.4285714285718], [245.0, 553.8888888888889], [246.0, 1165.4285714285716], [247.0, 956.3333333333334], [248.0, 543.0], [249.0, 1195.7878787878788], [250.0, 1796.5625], [251.0, 753.2777777777777], [252.0, 846.0000000000001], [253.0, 1361.8249999999998], [254.0, 1271.894736842105], [255.0, 1312.2727272727273], [257.0, 1622.6153846153848], [256.0, 1258.0], [258.0, 817.8333333333334], [259.0, 897.0000000000001], [260.0, 2432.6666666666665], [261.0, 952.7333333333333], [262.0, 1837.4615384615386], [263.0, 489.6], [264.0, 900.6], [270.0, 1108.7142857142856], [271.0, 898.3333333333334], [268.0, 1095.0500000000002], [269.0, 1741.6875], [265.0, 1189.0833333333335], [266.0, 1173.2608695652173], [267.0, 1377.9333333333334], [273.0, 1166.2916666666665], [272.0, 1355.8999999999999], [274.0, 1266.75], [275.0, 748.3076923076924], [276.0, 1871.9166666666665], [277.0, 1727.6363636363633], [278.0, 1496.9], [279.0, 1257.642857142857], [280.0, 1521.7777777777778], [286.0, 1206.0], [287.0, 1844.3571428571431], [284.0, 1781.9166666666665], [285.0, 1852.4], [281.0, 1261.7058823529412], [282.0, 941.5714285714286], [283.0, 1286.3333333333333], [289.0, 1269.909090909091], [288.0, 1629.6111111111109], [290.0, 949.1363636363636], [291.0, 1449.4615384615386], [292.0, 1445.5625], [293.0, 2543.5], [294.0, 1704.9375000000002], [295.0, 1010.8421052631579], [296.0, 2057.111111111111], [302.0, 1431.0555555555554], [303.0, 1925.6666666666665], [300.0, 1046.3333333333335], [301.0, 1098.5833333333333], [297.0, 2138.090909090909], [298.0, 1115.9473684210527], [299.0, 1757.1999999999998], [305.0, 1270.4545454545455], [304.0, 1442.3749999999998], [306.0, 1026.75], [307.0, 1762.9444444444443], [308.0, 876.9375], [309.0, 1639.7826086956522], [310.0, 1063.9523809523812], [311.0, 2484.090909090909], [312.0, 2355.125], [318.0, 939.3], [319.0, 1294.3809523809525], [316.0, 1552.3], [317.0, 1495.875], [313.0, 1024.1], [314.0, 1781.230769230769], [315.0, 1402.5652173913045], [321.0, 1270.9166666666667], [320.0, 2965.5555555555557], [322.0, 1329.5333333333333], [323.0, 1521.4285714285713], [324.0, 2430.1666666666665], [325.0, 1527.3823529411766], [326.0, 2170.3333333333335], [327.0, 1406.1052631578948], [328.0, 1263.625], [334.0, 1510.3333333333335], [335.0, 983.6000000000001], [332.0, 1514.1666666666667], [333.0, 1511.857142857143], [329.0, 1972.44], [330.0, 1028.3529411764705], [331.0, 1183.8095238095239], [337.0, 2455.5714285714284], [336.0, 1630.2666666666669], [338.0, 1594.7407407407409], [339.0, 2312.481481481481], [340.0, 2077.227272727273], [341.0, 1817.8285714285716], [342.0, 1847.4375], [343.0, 2638.7999999999997], [344.0, 1583.0624999999998], [350.0, 2517.5789473684213], [351.0, 1671.4], [348.0, 1490.0666666666664], [349.0, 1746.2368421052633], [345.0, 1903.8095238095239], [346.0, 1654.6315789473683], [347.0, 2489.9333333333334], [353.0, 2635.0666666666666], [352.0, 2086.466666666667], [354.0, 1347.9166666666667], [355.0, 1130.3684210526317], [356.0, 1111.375], [357.0, 1764.8571428571427], [358.0, 2021.1052631578948], [359.0, 1151.3125], [360.0, 1845.2142857142858], [366.0, 1963.9], [367.0, 1417.3125], [364.0, 740.125], [365.0, 1434.7222222222217], [361.0, 1301.5454545454545], [362.0, 1346.8666666666668], [363.0, 1313.7272727272725], [369.0, 2949.593749999999], [368.0, 1758.6315789473683], [370.0, 1666.642857142857], [371.0, 2099.4], [372.0, 1594.8214285714287], [373.0, 2393.857142857143], [374.0, 1950.6999999999998], [375.0, 1689.1034482758619], [376.0, 1214.4285714285716], [382.0, 2040.1071428571427], [383.0, 2370.285714285714], [380.0, 2114.25], [381.0, 1806.526315789474], [377.0, 1792.7894736842106], [378.0, 1459.3333333333335], [379.0, 1809.8333333333333], [385.0, 1936.3333333333335], [384.0, 1302.1999999999998], [386.0, 3120.1111111111113], [387.0, 2876.1578947368416], [388.0, 1833.8372093023254], [389.0, 2138.7], [390.0, 1716.1052631578948], [391.0, 1519.4444444444443], [392.0, 1769.7692307692305], [398.0, 2429.1666666666665], [399.0, 1856.7222222222222], [396.0, 2258.4], [397.0, 1070.3999999999999], [393.0, 1655.5555555555554], [394.0, 1382.8421052631575], [395.0, 1792.6249999999998], [401.0, 2010.0], [400.0, 3325.777777777778], [402.0, 1850.3684210526317], [403.0, 1815.7647058823527], [404.0, 1698.4615384615383], [405.0, 1286.8378378378375], [406.0, 1312.2777777777778], [407.0, 3522.6666666666665], [408.0, 2819.347826086956], [414.0, 1972.4705882352941], [415.0, 1498.6153846153848], [412.0, 2302.3809523809523], [413.0, 782.4615384615385], [409.0, 1639.269230769231], [410.0, 1875.6666666666667], [411.0, 1975.2727272727273], [417.0, 1341.904761904762], [416.0, 1343.0714285714287], [418.0, 1544.5384615384617], [419.0, 1608.285714285714], [420.0, 1772.6], [421.0, 1367.0555555555554], [422.0, 1854.7142857142858], [423.0, 2435.916666666667], [424.0, 2100.777777777778], [430.0, 2507.090909090909], [431.0, 1504.4583333333333], [428.0, 1099.625], [429.0, 2193.0606060606065], [425.0, 1211.9285714285716], [426.0, 1199.8235294117649], [427.0, 1738.333333333333], [433.0, 3020.909090909091], [432.0, 2136.4117647058824], [434.0, 1618.2592592592594], [435.0, 1881.945945945946], [436.0, 1590.395348837209], [437.0, 1922.85], [438.0, 1536.4375], [439.0, 1756.636363636364], [440.0, 1870.1176470588234], [446.0, 2323.058823529412], [447.0, 1603.96875], [444.0, 2142.25], [445.0, 2034.8709677419354], [441.0, 1874.8461538461538], [442.0, 1756.4285714285713], [443.0, 1268.3529411764703], [449.0, 1578.6249999999998], [448.0, 2139.714285714286], [450.0, 1506.9], [451.0, 1802.5882352941178], [452.0, 1672.2142857142858], [453.0, 1613.4285714285716], [454.0, 2185.567567567567], [455.0, 1317.1612903225803], [456.0, 1760.625], [462.0, 1750.4615384615386], [463.0, 1918.2424242424242], [460.0, 1509.8181818181818], [461.0, 1599.2727272727273], [457.0, 1429.8000000000006], [458.0, 1806.3999999999999], [459.0, 2082.8888888888887], [465.0, 2305.9756097560976], [464.0, 2448.25], [466.0, 1541.181818181818], [467.0, 1515.875], [468.0, 1710.5], [469.0, 1492.0], [470.0, 1630.681818181818], [471.0, 1692.72], [472.0, 2028.3939393939397], [478.0, 1833.7272727272725], [479.0, 1487.9259259259256], [476.0, 1793.2162162162158], [477.0, 1729.404761904762], [473.0, 2054.6875], [474.0, 1673.3783783783786], [475.0, 2123.548387096774], [481.0, 1930.1200000000001], [480.0, 1570.2452830188683], [482.0, 1943.8055555555552], [483.0, 1398.904761904762], [484.0, 1472.9], [485.0, 1819.1875], [486.0, 1652.6111111111113], [487.0, 1618.3095238095236], [488.0, 1752.2857142857147], [494.0, 2024.5555555555557], [495.0, 1691.0], [492.0, 1625.8611111111109], [493.0, 1747.7222222222224], [489.0, 1854.4761904761904], [490.0, 1661.8888888888887], [491.0, 2004.875000000001], [496.0, 1540.0454545454545], [497.0, 2125.428571428571], [498.0, 1174.0666666666666], [499.0, 1819.831168831169], [500.0, 1941.55456570156], [1.0, 6507.0]], "isOverall": false, "label": "stress test", "isController": false}, {"data": [[377.93216815521873, 1616.9305512781045]], "isOverall": false, "label": "stress test-Aggregated", "isController": false}, {"data": [[2.0, 5383.0], [3.0, 4970.0], [4.0, 4965.0], [5.0, 5317.0], [6.0, 5475.0], [7.0, 5435.0], [8.0, 4599.0], [9.0, 5751.0], [10.0, 4920.0], [11.0, 4639.0], [12.0, 5234.0], [13.0, 5879.0], [14.0, 5618.0], [15.0, 5199.0], [16.0, 5629.0], [17.0, 5937.0], [18.0, 5093.0], [19.0, 4118.0], [20.0, 4657.0], [21.0, 4348.0], [22.0, 5637.0], [23.0, 5495.0], [24.0, 5493.0], [25.0, 4627.0], [26.0, 5646.0], [27.0, 5604.0], [28.0, 5366.0], [29.0, 5552.0], [30.0, 5331.0], [31.0, 5338.0], [33.0, 3055.0], [32.0, 4736.0], [35.0, 4882.0], [34.0, 4484.0], [37.0, 3643.0], [36.0, 4345.0], [39.0, 6688.0], [38.0, 3491.0], [41.0, 5210.0], [40.0, 3635.0], [43.0, 5051.0], [42.0, 4895.0], [45.0, 3566.0], [44.0, 3464.0], [47.0, 5109.0], [46.0, 3487.0], [49.0, 5076.0], [48.0, 4891.0], [51.0, 3630.0], [50.0, 5195.0], [53.0, 4063.0], [52.0, 3622.0], [55.0, 4616.0], [54.0, 4256.0], [57.0, 4990.0], [56.0, 5413.0], [59.0, 5121.0], [58.0, 5406.0], [61.0, 4364.0], [60.0, 5939.0], [63.0, 4687.0], [62.0, 5810.0], [67.0, 4745.0], [66.0, 7252.0], [65.0, 3902.0], [64.0, 5132.0], [68.0, 2655.5], [71.0, 5075.0], [70.0, 5952.0], [69.0, 3999.0], [75.0, 6567.0], [74.0, 3426.0], [73.0, 5929.0], [72.0, 4599.0], [79.0, 4145.0], [78.0, 3751.0], [77.0, 3342.0], [76.0, 5888.0], [83.0, 6419.0], [82.0, 4549.0], [81.0, 4522.0], [80.0, 4283.0], [87.0, 4822.0], [86.0, 4578.0], [85.0, 5001.0], [84.0, 4028.0], [91.0, 4474.0], [90.0, 4897.0], [89.0, 4464.0], [88.0, 4950.0], [93.0, 3624.0], [95.0, 4953.0], [94.0, 6923.0], [92.0, 5078.0], [99.0, 3537.0], [98.0, 3438.0], [97.0, 3499.0], [96.0, 6705.0], [103.0, 6879.0], [102.0, 3315.0], [101.0, 3705.0], [100.0, 5085.0], [107.0, 4715.0], [106.0, 3940.0], [105.0, 5022.0], [104.0, 3236.0], [108.0, 2714.5], [111.0, 4168.0], [110.0, 4370.0], [109.0, 4432.0], [113.0, 3630.5], [115.0, 4648.0], [114.0, 5070.0], [112.0, 3385.0], [117.0, 3037.5], [119.0, 5300.0], [118.0, 6730.0], [116.0, 5108.0], [123.0, 2927.5], [122.0, 4121.0], [121.0, 5257.0], [120.0, 4542.0], [127.0, 4098.0], [126.0, 4919.0], [125.0, 4887.0], [124.0, 4996.0], [134.0, 1943.0], [135.0, 5424.0], [133.0, 4819.0], [132.0, 6102.0], [131.0, 3285.0], [130.0, 6560.0], [129.0, 5441.0], [128.0, 6747.0], [136.0, 2494.0], [137.0, 2320.333333333333], [139.0, 2319.333333333333], [140.0, 2737.5], [143.0, 3514.0], [142.0, 4953.0], [141.0, 4993.0], [138.0, 6072.0], [150.0, 2580.5], [151.0, 3865.0], [149.0, 2594.0], [148.0, 3530.0], [147.0, 4538.0], [146.0, 5999.0], [145.0, 6088.0], [144.0, 4101.0], [153.0, 2387.5], [155.0, 1703.6666666666667], [156.0, 2464.666666666667], [158.0, 2822.5], [159.0, 5103.0], [157.0, 6076.0], [154.0, 6040.0], [152.0, 4719.0], [161.0, 2308.0], [162.0, 2651.5], [164.0, 2082.25], [165.0, 2259.5], [166.0, 2061.5], [167.0, 4600.0], [163.0, 3405.0], [160.0, 6375.0], [175.0, 1473.6666666666665], [174.0, 4755.0], [173.0, 5185.0], [172.0, 6087.0], [171.0, 3727.0], [170.0, 3213.0], [169.0, 5967.0], [168.0, 4357.0], [176.0, 2074.5], [178.0, 2723.5], [179.0, 2627.0], [180.0, 3320.0], [181.0, 2029.5], [183.0, 3141.5], [182.0, 2982.0], [177.0, 5835.0], [184.0, 3207.0], [186.0, 1528.0], [187.0, 3052.0], [191.0, 5666.0], [190.0, 4539.0], [189.0, 6059.0], [188.0, 4670.0], [185.0, 5885.0], [197.0, 2678.5], [199.0, 3437.0], [198.0, 3440.0], [196.0, 4496.0], [195.0, 5985.0], [194.0, 5662.0], [193.0, 6117.0], [192.0, 4727.0], [201.0, 314.5], [203.0, 1548.0], [204.0, 1927.0], [206.0, 2715.0], [207.0, 2157.0], [205.0, 5901.0], [202.0, 4305.0], [200.0, 4436.0], [209.0, 2620.5], [210.0, 2355.5], [214.0, 1924.0], [215.0, 5692.0], [213.0, 6108.0], [212.0, 5481.0], [211.0, 3667.0], [208.0, 3321.0], [216.0, 1915.0], [223.0, 5970.0], [222.0, 5753.0], [221.0, 5477.0], [220.0, 4423.0], [219.0, 3499.0], [218.0, 5477.0], [217.0, 4824.0], [227.0, 2341.5], [228.0, 3181.0], [230.0, 2408.5], [231.0, 3255.5], [229.0, 5387.0], [226.0, 4317.0], [225.0, 4393.0], [224.0, 3334.0], [234.0, 3145.0], [238.0, 2845.0], [239.0, 4643.0], [237.0, 4580.0], [236.0, 4556.0], [235.0, 5389.0], [233.0, 4430.0], [232.0, 5710.0], [240.0, 2474.5], [245.0, 3160.5], [247.0, 2267.0], [246.0, 4499.0], [244.0, 4592.0], [243.0, 6208.0], [242.0, 3485.0], [241.0, 3313.0], [248.0, 2851.5], [251.0, 1503.4], [255.0, 5576.0], [254.0, 3925.0], [253.0, 5670.0], [252.0, 4408.0], [250.0, 5583.0], [249.0, 4368.0], [270.0, 3856.0], [258.0, 2026.3333333333333], [257.0, 3270.0], [256.0, 5810.0], [259.0, 2288.5], [269.0, 5036.0], [268.0, 4713.0], [260.0, 3023.5], [262.0, 4440.0], [261.0, 5518.0], [263.0, 5141.0], [264.0, 3023.0], [266.0, 2905.0], [265.0, 4332.0], [267.0, 2601.5], [271.0, 1972.5], [285.0, 2294.0], [276.0, 2107.5], [278.0, 1245.0], [277.0, 5119.0], [279.0, 2187.0], [280.0, 1972.0], [281.0, 4968.0], [284.0, 2916.0], [275.0, 4074.0], [274.0, 4080.0], [273.0, 5023.0], [272.0, 4648.0], [287.0, 1573.0], [286.0, 5355.0], [283.0, 1196.0], [282.0, 4931.0], [302.0, 1840.25], [301.0, 2690.0], [303.0, 4934.0], [300.0, 1715.0], [299.0, 4636.0], [298.0, 1535.0], [297.0, 5306.0], [296.0, 3813.0], [295.0, 3623.0], [289.0, 4326.0], [288.0, 5134.0], [291.0, 5215.0], [290.0, 5147.0], [294.0, 3764.0], [293.0, 3537.0], [292.0, 1609.0], [319.0, 2033.5], [305.0, 1129.5], [304.0, 3905.0], [306.0, 3446.0], [311.0, 5112.0], [310.0, 3699.0], [309.0, 4131.0], [308.0, 3800.0], [307.0, 1497.2], [312.0, 2336.5], [313.0, 2898.0], [314.0, 1869.6666666666667], [315.0, 1143.5], [316.0, 2808.0], [318.0, 3759.0], [317.0, 3581.0], [327.0, 1845.5], [324.0, 889.6666666666667], [325.0, 498.3333333333333], [326.0, 1853.3333333333333], [329.0, 1717.8], [330.0, 2272.0], [331.0, 4447.0], [334.0, 690.5], [335.0, 2414.0], [328.0, 4665.0], [333.0, 4116.0], [332.0, 3942.0], [323.0, 4054.0], [322.0, 4951.0], [321.0, 3741.0], [320.0, 3864.0], [337.0, 2373.5], [340.0, 1551.3333333333335], [341.0, 2269.0], [343.0, 427.0], [336.0, 1504.0], [342.0, 665.0], [344.0, 1779.6666666666667], [346.0, 428.0], [345.0, 3952.0], [347.0, 3867.0], [351.0, 3935.0], [350.0, 819.0], [349.0, 4532.0], [348.0, 4863.0], [339.0, 279.0], [338.0, 4706.0], [355.0, 2745.5], [353.0, 2524.5], [352.0, 705.0], [359.0, 846.0], [354.0, 1961.0], [357.0, 1856.5], [356.0, 1469.0], [358.0, 701.0], [361.0, 739.5], [367.0, 1956.0], [360.0, 3467.0], [365.0, 1435.5], [364.0, 2276.5], [366.0, 2257.0], [362.0, 2619.0], [363.0, 2182.666666666667], [380.0, 1731.6666666666665], [370.0, 2712.5], [371.0, 1121.5], [373.0, 1979.0], [372.0, 795.0], [375.0, 276.0], [369.0, 4378.0], [368.0, 4493.0], [376.0, 1109.5], [378.0, 704.0], [377.0, 860.0], [379.0, 279.0], [382.0, 1864.0], [383.0, 2505.5], [381.0, 4193.0], [398.0, 830.0], [384.0, 662.0], [387.0, 780.0], [386.0, 833.0], [385.0, 873.0], [388.0, 758.5], [389.0, 279.5], [391.0, 2567.5], [390.0, 3196.0], [399.0, 2082.0], [393.0, 1611.0], [392.0, 4197.0], [397.0, 261.0], [396.0, 3455.0], [395.0, 4296.0], [394.0, 4271.0], [414.0, 2161.666666666667], [402.0, 1422.5], [407.0, 4377.0], [401.0, 1332.8], [400.0, 4148.0], [404.0, 1447.25], [405.0, 1915.5], [406.0, 2651.5], [409.0, 683.0], [411.0, 1692.5], [415.0, 863.5], [413.0, 858.5], [403.0, 4760.0], [408.0, 2587.0], [431.0, 1064.5], [418.0, 1703.0], [416.0, 2227.8333333333335], [417.0, 2955.0], [423.0, 3664.0], [422.0, 2223.0], [421.0, 4006.0], [420.0, 272.0], [425.0, 856.3333333333334], [424.0, 807.0], [430.0, 1800.5], [429.0, 3433.0], [428.0, 2872.0], [419.0, 3955.0], [427.0, 836.0], [426.0, 365.0], [444.0, 1184.0], [433.0, 957.5], [432.0, 3204.0], [434.0, 1621.75], [435.0, 846.3333333333334], [436.0, 2151.0], [438.0, 2778.0], [437.0, 4561.0], [439.0, 1295.0], [440.0, 943.5], [441.0, 1129.0], [443.0, 3029.5], [442.0, 870.0], [445.0, 2587.25], [447.0, 1448.25], [460.0, 2326.75], [451.0, 1598.75], [455.0, 803.0], [449.0, 511.0], [448.0, 1797.0], [450.0, 2214.857142857143], [452.0, 1144.5], [453.0, 2843.5], [454.0, 1657.857142857143], [456.0, 1115.0], [458.0, 1745.0], [457.0, 3620.0], [459.0, 599.0], [461.0, 914.3333333333334], [462.0, 1946.3333333333335], [463.0, 3155.5], [477.0, 673.0], [465.0, 1239.2], [464.0, 763.0], [466.0, 1409.0], [467.0, 627.0], [470.0, 1804.25], [469.0, 1714.0], [468.0, 2958.0], [471.0, 1887.4], [475.0, 695.0], [478.0, 1103.75], [479.0, 2499.166666666667], [474.0, 2107.5], [473.0, 2097.25], [472.0, 2039.8333333333333], [493.0, 1541.3333333333335], [481.0, 1847.0], [482.0, 917.0], [492.0, 1410.5], [483.0, 1506.833333333333], [484.0, 983.3333333333334], [485.0, 703.0], [487.0, 2356.3333333333335], [480.0, 2895.25], [486.0, 2292.5], [488.0, 860.5714285714287], [491.0, 953.1249999999999], [490.0, 1340.75], [489.0, 1156.3333333333335], [495.0, 978.0], [494.0, 2122.25], [498.0, 1837.764705882353], [499.0, 1694.9615384615383], [500.0, 1376.434782608695], [497.0, 1304.6666666666667], [496.0, 707.0], [1.0, 4613.0]], "isOverall": false, "label": "spike test", "isController": false}, {"data": [[368.6489607390297, 2289.2948421862957]], "isOverall": false, "label": "spike test-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4492.933333333333, "minX": 1.62921336E12, "maxY": 679431.6, "series": [{"data": [[1.62921342E12, 194277.71666666667], [1.62921336E12, 116961.33333333333], [1.62921348E12, 679431.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62921342E12, 7473.066666666667], [1.62921336E12, 4492.933333333333], [1.62921348E12, 25546.066666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62921348E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 439.91970802919707, "minX": 1.62921336E12, "maxY": 2289.2948421862957, "series": [{"data": [[1.62921342E12, 882.4292706803741], [1.62921336E12, 1037.1862925482983]], "isOverall": false, "label": "Load test", "isController": false}, {"data": [[1.62921342E12, 439.91970802919707], [1.62921348E12, 1642.2963662104717]], "isOverall": false, "label": "stress test", "isController": false}, {"data": [[1.62921342E12, 2289.2948421862957]], "isOverall": false, "label": "spike test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62921348E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 439.49999999999994, "minX": 1.62921336E12, "maxY": 2288.8237105465755, "series": [{"data": [[1.62921342E12, 882.0014684287808], [1.62921336E12, 1036.7677092916285]], "isOverall": false, "label": "Load test", "isController": false}, {"data": [[1.62921342E12, 439.49999999999994], [1.62921348E12, 1639.9428975931987]], "isOverall": false, "label": "stress test", "isController": false}, {"data": [[1.62921342E12, 2288.8237105465755]], "isOverall": false, "label": "spike test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62921348E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 37.23722627737229, "minX": 1.62921336E12, "maxY": 43.143306591159295, "series": [{"data": [[1.62921342E12, 39.044052863436185], [1.62921336E12, 38.861085556577706]], "isOverall": false, "label": "Load test", "isController": false}, {"data": [[1.62921342E12, 37.23722627737229], [1.62921348E12, 43.143306591159295]], "isOverall": false, "label": "stress test", "isController": false}, {"data": [[1.62921342E12, 42.41724403387224]], "isOverall": false, "label": "spike test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62921348E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 248.0, "minX": 1.62921336E12, "maxY": 11818.0, "series": [{"data": [[1.62921342E12, 7252.0], [1.62921336E12, 2554.0], [1.62921348E12, 11818.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62921342E12, 4105.5], [1.62921336E12, 1815.0], [1.62921348E12, 4141.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62921342E12, 6057.789999999999], [1.62921336E12, 2396.0], [1.62921348E12, 8597.23]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62921342E12, 4964.45], [1.62921336E12, 2105.5], [1.62921348E12, 7091.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62921342E12, 251.0], [1.62921336E12, 251.0], [1.62921348E12, 248.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62921342E12, 531.5], [1.62921336E12, 985.5], [1.62921348E12, 1018.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62921348E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 24.0, "minX": 1.0, "maxY": 6646.0, "series": [{"data": [[6.0, 269.0], [7.0, 400.0], [9.0, 6646.0], [11.0, 2482.5], [17.0, 612.0], [20.0, 466.5], [24.0, 277.5], [27.0, 549.0], [34.0, 465.0], [41.0, 296.0], [45.0, 286.0], [50.0, 522.5], [51.0, 350.0], [56.0, 300.0], [59.0, 469.0], [58.0, 372.0], [67.0, 1132.0], [66.0, 662.5], [70.0, 350.0], [71.0, 556.0], [69.0, 388.0], [75.0, 842.0], [73.0, 1076.0], [74.0, 1027.5], [72.0, 1232.0], [76.0, 573.0], [78.0, 706.0], [79.0, 933.0], [77.0, 1194.5], [80.0, 1179.0], [82.0, 3355.5], [84.0, 4951.5], [88.0, 351.0], [91.0, 377.0], [90.0, 304.0], [92.0, 333.0], [95.0, 377.0], [93.0, 310.0], [99.0, 345.0], [97.0, 363.0], [96.0, 428.0], [107.0, 590.0], [108.0, 407.0], [112.0, 418.5], [121.0, 344.0], [134.0, 4821.5], [131.0, 299.0], [137.0, 3558.0], [159.0, 373.0], [156.0, 388.0], [175.0, 690.5], [177.0, 1369.0], [194.0, 1165.5], [197.0, 1245.0], [207.0, 491.0], [203.0, 504.0], [201.0, 477.0], [204.0, 394.0], [202.0, 331.5], [212.0, 497.5], [211.0, 1009.0], [214.0, 1122.0], [220.0, 486.5], [218.0, 397.5], [225.0, 1223.5], [224.0, 1290.5], [231.0, 1409.0], [228.0, 843.5], [227.0, 492.0], [226.0, 361.5], [239.0, 1010.0], [235.0, 1496.0], [236.0, 1016.5], [233.0, 1379.0], [234.0, 1184.0], [238.0, 960.0], [237.0, 432.0], [232.0, 523.5], [241.0, 1236.0], [240.0, 1473.5], [244.0, 1460.0], [243.0, 1291.0], [246.0, 981.5], [248.0, 1387.5], [254.0, 848.0], [255.0, 372.0], [1.0, 270.0], [256.0, 1556.0], [268.0, 879.0], [261.0, 1034.0], [260.0, 1312.0], [270.0, 1183.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[260.0, 2642.0], [131.0, 24.0], [76.0, 391.0], [88.0, 1745.0], [207.0, 672.0], [237.0, 62.0], [243.0, 1695.0], [255.0, 32.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 270.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6646.0, "series": [{"data": [[6.0, 269.0], [7.0, 399.0], [9.0, 6646.0], [11.0, 2482.0], [17.0, 612.0], [20.0, 466.0], [24.0, 277.5], [27.0, 549.0], [34.0, 465.0], [41.0, 295.0], [45.0, 286.0], [50.0, 522.5], [51.0, 350.0], [56.0, 299.5], [59.0, 468.0], [58.0, 371.5], [67.0, 1131.5], [66.0, 662.0], [70.0, 350.0], [71.0, 556.0], [69.0, 388.0], [75.0, 840.0], [73.0, 1076.0], [74.0, 1027.0], [72.0, 1231.5], [76.0, 573.0], [78.0, 705.5], [79.0, 932.5], [77.0, 1193.5], [80.0, 1178.5], [82.0, 3354.5], [84.0, 4950.5], [88.0, 351.0], [91.0, 376.0], [90.0, 304.0], [92.0, 332.0], [95.0, 376.0], [93.0, 309.0], [99.0, 345.0], [97.0, 362.0], [96.0, 428.0], [107.0, 590.0], [108.0, 406.5], [112.0, 418.0], [121.0, 344.0], [134.0, 4821.5], [131.0, 299.0], [137.0, 3558.0], [159.0, 373.0], [156.0, 387.0], [175.0, 690.0], [177.0, 1367.0], [194.0, 1165.0], [197.0, 1245.0], [207.0, 491.0], [203.0, 504.0], [201.0, 476.0], [204.0, 393.0], [202.0, 331.0], [212.0, 497.0], [211.0, 1009.0], [214.0, 1122.0], [220.0, 485.5], [218.0, 397.0], [225.0, 1222.5], [224.0, 1290.0], [231.0, 1409.0], [228.0, 843.0], [227.0, 492.0], [226.0, 361.0], [239.0, 1009.0], [235.0, 1495.0], [236.0, 1016.5], [233.0, 1378.0], [234.0, 1184.0], [238.0, 958.0], [237.0, 432.0], [232.0, 523.0], [241.0, 1235.0], [240.0, 1473.5], [244.0, 1459.0], [243.0, 1290.0], [246.0, 981.0], [248.0, 1387.5], [254.0, 847.5], [255.0, 371.0], [1.0, 268.0], [256.0, 1555.0], [268.0, 878.0], [261.0, 1034.0], [260.0, 1311.0], [270.0, 1183.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[260.0, 2642.0], [131.0, 0.0], [76.0, 391.0], [88.0, 1745.0], [207.0, 672.0], [237.0, 0.0], [243.0, 1695.0], [255.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 270.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 37.9, "minX": 1.62921336E12, "maxY": 210.38333333333333, "series": [{"data": [[1.62921342E12, 60.11666666666667], [1.62921336E12, 37.9], [1.62921348E12, 210.38333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62921348E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.62921336E12, "maxY": 205.96666666666667, "series": [{"data": [[1.62921342E12, 60.166666666666664], [1.62921336E12, 36.233333333333334], [1.62921348E12, 205.96666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.62921342E12, 0.08333333333333333], [1.62921348E12, 0.05]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.62921342E12, 0.016666666666666666]], "isOverall": false, "label": "503", "isController": false}, {"data": [[1.62921348E12, 5.883333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.BindException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62921348E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62921336E12, "maxY": 205.96666666666667, "series": [{"data": [[1.62921342E12, 33.95], [1.62921336E12, 36.233333333333334]], "isOverall": false, "label": "Load test-success", "isController": false}, {"data": [[1.62921342E12, 0.1]], "isOverall": false, "label": "Load test-failure", "isController": false}, {"data": [[1.62921342E12, 4.566666666666666], [1.62921348E12, 205.96666666666667]], "isOverall": false, "label": "stress test-success", "isController": false}, {"data": [[1.62921348E12, 5.933333333333334]], "isOverall": false, "label": "stress test-failure", "isController": false}, {"data": [[1.62921342E12, 21.65]], "isOverall": false, "label": "spike test-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62921348E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.62921336E12, "maxY": 205.96666666666667, "series": [{"data": [[1.62921342E12, 60.166666666666664], [1.62921336E12, 36.233333333333334], [1.62921348E12, 205.96666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.62921342E12, 0.1], [1.62921348E12, 5.933333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62921348E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

